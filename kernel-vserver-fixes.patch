--- linux-3.3/fs/proc/base.c~	2012-03-19 21:44:42.000000000 +0100
+++ linux-3.3/fs/proc/base.c	2012-03-21 12:25:28.051092423 +0100
@@ -568,6 +568,8 @@
 				 struct task_struct *task,
 				 int hide_pid_min)
 {
+	if (vx_check(0, VS_WATCH_P))
+		return true;
 	if (pid->hide_pid < hide_pid_min)
 		return true;
 	if (in_group_p(pid->pid_gid))
--- linux-4.9.76/include/linux/vs_time.h	1970-01-01 00:00:00.000000000 +0000
+++ linux-4.9.76-vs2.3.9.5/include/linux/vs_time.h	2018-01-10 09:27:12.000000000 +0000
@@ -7,7 +7,7 @@
 
 extern void vx_adjust_timespec(struct timespec *ts);
 extern int vx_settimeofday(const struct timespec *ts);
-extern int vx_settimeofday64(const struct timespec *ts);
+extern int vx_settimeofday64(const struct timespec64 *ts);
 
 #else
 #define	vx_adjust_timespec(t)	do { } while (0)
--- linux-4.9.76/include/linux/vserver/cvirt.h	1970-01-01 00:00:00.000000000 +0000
+++ linux-4.9.76-vs2.3.9.5/include/linux/vserver/cvirt.h	2018-01-10 02:50:49.000000000 +0000
@@ -3,7 +3,7 @@ diff -NurpP --minimal linux-4.9.76/include/linux/vserver/cvirt.h linux-4.9.76-vs
 
 struct timespec;
 
-void vx_vsi_boottime(struct timespec *);
+void vx_vsi_boottime(struct timespec64 *);
 
 void vx_vsi_uptime(struct timespec *, struct timespec *);
 
--- linux-4.9.76/kernel/vserver/cvirt.c	1970-01-01 00:00:00.000000000 +0000
+++ linux-4.9.76-vs2.3.9.5/kernel/vserver/cvirt.c	2018-01-11 08:36:23.000000000 +0000
@@ -20,11 +20,11 @@ diff -NurpP --minimal linux-4.9.76/kernel/vserver/cvirt.c linux-4.9.76-vs2.3.9.5
 #include <asm/uaccess.h>
 
 
-void vx_vsi_boottime(struct timespec *boottime)
+void vx_vsi_boottime(struct timespec64 *boottime)
 {
 	struct vx_info *vxi = current_vx_info();
 
-	set_normalized_timespec(boottime,
+	set_normalized_timespec64(boottime,
 		boottime->tv_sec + vxi->cvirt.bias_uptime.tv_sec,
 		boottime->tv_nsec + vxi->cvirt.bias_uptime.tv_nsec);
 	return;
@@ -245,8 +245,8 @@ diff -NurpP --minimal linux-4.9.76/kernel/vserver/cvirt.c linux-4.9.76-vs2.3.9.5
 	struct _vx_cvirt *cvirt = &vxi->cvirt;
 	struct timespec64 uptime;
 
-	ktime_get_ts(&uptime);
-	set_normalized_timespec(&uptime,
+	ktime_get_ts64(&uptime);
+	set_normalized_timespec64(&uptime,
 		uptime.tv_sec - cvirt->bias_uptime.tv_sec,
 		uptime.tv_nsec - cvirt->bias_uptime.tv_nsec);
 
