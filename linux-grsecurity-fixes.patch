diff -urN linux/Documentation/Configure.help linux.new/Documentation/Configure.help
--- linux/Documentation/Configure.help	Mon Nov 26 18:23:35 2001
+++ linux.new/Documentation/Configure.help	Mon Nov 26 18:20:19 2001
@@ -20628,7 +20628,7 @@
   grsecurity runs with at bootup, without having to recompile your
   kernel.  You can echo values to files in /proc/sys/kernel/grsecurity
   to enable (1) or disable (0) various features.  They can only be set
-  once per boot for security reasons.  All features are enabled by default.
+  once per boot for security reasons.  All features are disabled by default.
   Please note that this option could reduce the effectiveness
   of the added security of this patch if an ACL system is not put in
   place.  Your init scripts should be read-only, and root should not have
diff -urN linux/fs/proc/base.c linux.new/fs/proc/base.c
--- linux/fs/proc/base.c	Mon Nov 26 18:23:38 2001
+++ linux.new/fs/proc/base.c	Mon Nov 26 18:20:19 2001
@@ -704,13 +704,15 @@
 	get_task_struct(task);
 	inode->u.proc_i.task = task;
 	inode->i_uid = 0;
+#ifndef CONFIG_GRKERNSEC_PROC_USERGROUP
 	inode->i_gid = 0;
+#else
+	inode->i_gid = CONFIG_GRKERNSEC_PROC_GID;
+#endif
 	if (ino == PROC_PID_INO || task_dumpable(task)) {
 		inode->i_uid = task->euid;
 #ifndef CONFIG_GRKERNSEC_PROC_USERGROUP
 		inode->i_gid = task->egid;
-#else
-               inode->i_gid = CONFIG_GRKERNSEC_PROC_GID;
 #endif
 	}
 
diff -urN linux/kernel/grsecurity.c linux.new/kernel/grsecurity.c
--- linux/kernel/grsecurity.c	Mon Nov 26 18:23:42 2001
+++ linux.new/kernel/grsecurity.c	Mon Nov 26 18:13:12 2001
@@ -1,5 +1,6 @@
 #include <linux/config.h>
 
+#ifndef CONFIG_GRKERNSEC_SYSCTL
 #ifdef CONFIG_GRKERNSEC_LINK
 int grsec_enable_link= -1;
 #endif
@@ -14,27 +15,17 @@
 #endif
 #ifdef CONFIG_GRKERNSEC_FORKBOMB
 int grsec_enable_forkbomb= -1;
-#ifdef CONFIG_GRKERNSEC_SYSCTL
-int grsec_forkbomb_gid = -1;
-int grsec_forkbomb_sec = -1;
-int grsec_forkbomb_max = -1;
-#else
 int grsec_forkbomb_gid = CONFIG_GRKERNSEC_FORKBOMB_GID;
 int grsec_forkbomb_sec = CONFIG_GRKERNSEC_FORKBOMB_SEC;
 int grsec_forkbomb_max = CONFIG_GRKERNSEC_FORKBOMB_MAX;
 #endif
-#endif
 #ifdef CONFIG_GRKERNSEC_EXECLOG
 int grsec_enable_execlog= -1;
 #endif
 #ifdef CONFIG_GRKERNSEC_EXECLOG_GROUP
 int grsec_enable_execlog_group= -1;
-#ifdef CONFIG_GRKERNSEC_SYSCTL
-int grsec_execlog_gid= -1;
-#else
 int grsec_execlog_gid= CONFIG_GRKERNSEC_EXECLOG_GID;
 #endif
-#endif
 #ifdef CONFIG_GRKERNSEC_SUID
 int grsec_enable_suid= -1;
 #endif
@@ -70,11 +61,7 @@
 #endif
 #ifdef CONFIG_GRKERNSEC_TPE
 int grsec_enable_tpe= -1;
-#ifdef CONFIG_GRKERNSEC_SYSCTL
-int grsec_tpe_gid= -1;
-#else
 int grsec_tpe_gid= CONFIG_GRKERNSEC_TPE_GID;
-#endif
 #ifdef CONFIG_GRKERNSEC_TPE_GLIBC
 int grsec_enable_tpe_glibc= -1;
 #endif
@@ -96,36 +83,20 @@
 #endif
 #ifdef CONFIG_GRKERNSEC_RANDTTL
 int grsec_enable_randttl= -1;
-#ifdef CONFIG_GRKERNSEC_SYSCTL
-int grsec_randttl_thresh= -1;
-#else
 int grsec_randttl_thresh= CONFIG_GRKERNSEC_RANDTTL_THRESH;
 #endif
-#endif
 #ifdef CONFIG_GRKERNSEC_SOCKET_ALL
 int grsec_enable_socket_all= -1;
-#ifdef CONFIG_GRKERNSEC_SYSCTL
-int grsec_socket_all_gid= -1;
-#else
 int grsec_socket_all_gid= CONFIG_GRKERNSEC_SOCKET_ALL_GID;
 #endif
-#endif
 #ifdef CONFIG_GRKERNSEC_SOCKET_CLIENT
 int grsec_enable_socket_client= -1;
-#ifdef CONFIG_GRKERNSEC_SYSCTL
-int grsec_socket_client_gid= -1;
-#else
 int grsec_socket_client_gid= CONFIG_GRKERNSEC_SOCKET_CLIENT_GID;
 #endif
-#endif
 #ifdef CONFIG_GRKERNSEC_SOCKET_SERVER
 int grsec_enable_socket_server= -1;
-#ifdef CONFIG_GRKERNSEC_SYSCTL
-int grsec_socket_server_gid= -1;
-#else
 int grsec_socket_server_gid= CONFIG_GRKERNSEC_SOCKET_SERVER_GID;
 #endif
-#endif
 #ifdef CONFIG_GRKERNSEC_STEALTH_RST
 int grsec_enable_stealth_rst= -1;
 #endif
@@ -142,3 +113,161 @@
 int grsec_enable_stealth_flags= -1;
 #endif
 
+#else
+
+#ifdef CONFIG_GRKERNSEC_LINK
+int grsec_enable_link= 0;
+int grsec_enable_link_c= 0;
+#endif
+#ifdef CONFIG_GRKERNSEC_FIFO
+int grsec_enable_fifo= 0;
+int grsec_enable_fifo_c= 0;
+#endif
+#ifdef CONFIG_GRKERNSEC_FD
+int grsec_enable_fd= 0;
+int grsec_enable_fd_c= 0;
+#endif
+#ifdef CONFIG_GRKERNSEC_EXECVE
+int grsec_enable_execve= 0;
+int grsec_enable_execve_c= 0;
+#endif
+#ifdef CONFIG_GRKERNSEC_FORKBOMB
+int grsec_enable_forkbomb= 0;
+int grsec_forkbomb_gid = -1;
+int grsec_forkbomb_sec = -1;
+int grsec_forkbomb_max = -1;
+int grsec_enable_forkbomb_c= 0;
+int grsec_forkbomb_gid_c = 0;
+int grsec_forkbomb_sec_c = 0;
+int grsec_forkbomb_max_c = 0;
+#endif
+#ifdef CONFIG_GRKERNSEC_EXECLOG
+int grsec_enable_execlog= 0;
+int grsec_enable_execlog_c= 0;
+#endif
+#ifdef CONFIG_GRKERNSEC_EXECLOG_GROUP
+int grsec_enable_execlog_group= -1;
+int grsec_enable_execlog_group_c= -1;
+int grsec_execlog_gid= -1;
+int grsec_execlog_gid_c= 0;
+#endif
+#ifdef CONFIG_GRKERNSEC_SUID
+int grsec_enable_suid= 0;
+int grsec_enable_suid_c= 0;
+#endif
+#ifdef CONFIG_GRKERNSEC_SUID_ROOT
+int grsec_enable_suid_root= -1;
+int grsec_enable_suid_root_c= -1;
+#endif
+#ifdef CONFIG_GRKERNSEC_SIGNAL
+int grsec_enable_signal= 0;
+int grsec_enable_signal_c= 0;
+#endif
+#ifdef CONFIG_GRKERNSEC_COREDUMP
+int grsec_enable_coredump= 0;   
+int grsec_enable_coredump_c= 0;   
+#endif
+#ifdef CONFIG_GRKERNSEC_FORKFAIL
+int grsec_enable_forkfail= 0;
+int grsec_enable_forkfail_c= 0;
+#endif
+#ifdef CONFIG_GRKERNSEC_TIME
+int grsec_enable_time= 0;
+int grsec_enable_time_c= 0;
+#endif
+#ifdef CONFIG_GRKERNSEC_KBMAP
+int grsec_enable_kbmap= 0;
+int grsec_enable_kbmap_c= 0;
+#endif
+#ifdef CONFIG_GRKERNSEC_RANDNET
+int grsec_enable_randnet= 0;
+int grsec_enable_randnet_c= 0;
+#endif
+#ifdef CONFIG_GRKERNSEC_CHROOT
+int grsec_enable_chroot= 0;  
+int grsec_enable_chroot_c= 0;  
+#endif
+#ifdef CONFIG_GRKERNSEC_CHROOT_EXECLOG
+int grsec_enable_chroot_execlog= 0;
+int grsec_enable_chroot_execlog_c= 0;
+#endif
+#ifdef CONFIG_GRKERNSEC_CHROOT_CAPS
+int grsec_enable_chroot_caps= 0;
+int grsec_enable_chroot_caps_c= 0;
+#endif
+#ifdef CONFIG_GRKERNSEC_TPE
+int grsec_enable_tpe= 0;
+int grsec_tpe_gid= -1;
+int grsec_enable_tpe_c= 0;
+int grsec_tpe_gid_c= -1;
+#ifdef CONFIG_GRKERNSEC_TPE_GLIBC
+int grsec_enable_tpe_glibc= 0;  
+int grsec_enable_tpe_glibc_c= 0;  
+#endif
+#ifdef CONFIG_GRKERNSEC_TPE_ALL
+int grsec_enable_tpe_all= 0;   
+int grsec_enable_tpe_all_c= 0;   
+#endif
+#endif
+#ifdef CONFIG_GRKERNSEC_RANDPID
+int grsec_enable_randpid= 0;
+int grsec_enable_randpid_c= 0;
+#endif
+#ifdef CONFIG_GRKERNSEC_RANDID
+int grsec_enable_randid= 0;
+int grsec_enable_randid_c= 0;
+#endif
+#ifdef CONFIG_GRKERNSEC_RANDSRC   
+int grsec_enable_randsrc= 0;
+int grsec_enable_randsrc_c= 0;
+#endif
+#ifdef CONFIG_GRKERNSEC_RANDPING
+int grsec_enable_randping= 0;
+int grsec_enable_randping_c= 0;
+#endif
+#ifdef CONFIG_GRKERNSEC_RANDTTL
+int grsec_enable_randttl= 0;
+int grsec_randttl_thresh= -1;
+int grsec_enable_randttl_c= 0;
+int grsec_randttl_thresh_c= 0;
+#endif
+#ifdef CONFIG_GRKERNSEC_SOCKET_ALL
+int grsec_enable_socket_all= 0; 
+int grsec_socket_all_gid= -1;
+int grsec_enable_socket_all_c= 0; 
+int grsec_socket_all_gid_c= 0;
+#endif
+#ifdef CONFIG_GRKERNSEC_SOCKET_CLIENT
+int grsec_enable_socket_client= 0;
+int grsec_socket_client_gid= -1;
+int grsec_enable_socket_client_c= 0;
+int grsec_socket_client_gid_c= 0;
+#endif
+#ifdef CONFIG_GRKERNSEC_SOCKET_SERVER
+int grsec_enable_socket_server= 0;
+int grsec_socket_server_gid= -1;
+int grsec_enable_socket_server_c= 0;
+int grsec_socket_server_gid_c= 0;
+#endif
+#ifdef CONFIG_GRKERNSEC_STEALTH_RST
+int grsec_enable_stealth_rst= 0;
+int grsec_enable_stealth_rst_c= 0;
+#endif
+#ifdef CONFIG_GRKERNSEC_STEALTH_UDP
+int grsec_enable_stealth_udp= 0;
+int grsec_enable_stealth_udp_c= 0;
+#endif
+#ifdef CONFIG_GRKERNSEC_STEALTH_ICMP
+int grsec_enable_stealth_icmp= 0;
+int grsec_enable_stealth_icmp_c= 0;
+#endif
+#ifdef CONFIG_GRKERNSEC_STEALTH_IGMP 
+int grsec_enable_stealth_igmp= 0; 
+int grsec_enable_stealth_igmp_c= 0; 
+#endif
+#ifdef CONFIG_GRKERNSEC_STEALTH_FLAGS
+int grsec_enable_stealth_flags= 0;
+int grsec_enable_stealth_flags_c= 0;
+#endif
+
+#endif
diff -urN linux/kernel/sysctl.c linux.new/kernel/sysctl.c
--- linux/kernel/sysctl.c	Mon Nov 26 18:23:42 2001
+++ linux.new/kernel/sysctl.c	Mon Nov 26 18:19:53 2001
@@ -287,167 +287,167 @@
 static ctl_table grsecurity_table[] = {
 #ifdef CONFIG_GRKERNSEC_LINK
        {GS_LINK, "linking_restrictions", &grsec_enable_link, sizeof (int),
-        0640, NULL, &proc_dointvec}, 
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_enable_link_c}, 
 #endif
 #ifdef CONFIG_GRKERNSEC_FIFO
        {GS_FIFO, "fifo_restrictions", &grsec_enable_fifo, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_enable_fifo_c},
 #endif
 #ifdef CONFIG_GRKERNSEC_FD
        {GS_FD, "secure_fds", &grsec_enable_fd, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_enable_fd_c},
 #endif
 #ifdef CONFIG_GRKERNSEC_EXECVE
        {GS_EXECVE, "execve_limiting", &grsec_enable_execve, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_enable_execve_c},
 #endif
 #ifdef CONFIG_GRKERNSEC_FORKBOMB
        {GS_FORK, "fork_bomb_prot", &grsec_enable_forkbomb, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_enable_forkbomb_c},
        {GS_FORK_GID, "fork_bomb_gid", &grsec_forkbomb_gid, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_forkbomb_gid_c},
        {GS_FORK_SEC, "fork_bomb_sec", &grsec_forkbomb_sec, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_forkbomb_sec_c},
        {GS_FORK_MAX, "fork_bomb_max", &grsec_forkbomb_max, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_forkbomb_max_c},
 #endif
 #ifdef CONFIG_GRKERNSEC_EXECLOG
        {GS_EXECLOG, "exec_logging", &grsec_enable_execlog, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_enable_execlog_c},
 #endif
 #ifdef CONFIG_GRKERNSEC_EXECLOG_GROUP
        {GS_EXECLOG_GRP, "exec_group_logging", &grsec_enable_execlog_group, 
-	sizeof (int), 0640, NULL, &proc_dointvec},
+        sizeof (int), 0640, NULL, &proc_dointvec, NULL, NULL, &grsec_execlog_group_c},
        {GS_EXECLOG_GID, "exec_logging_gid", &grsec_execlog_gid, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_execlog_gid_c},
 #endif
 #ifdef CONFIG_GRKERNSEC_SUID
        {GS_SUID, "suid_logging", &grsec_enable_suid, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_enable_suid_c},
 #endif
 #ifdef CONFIG_GRKERNSEC_SUID_ROOT
        {GS_SUID_ROOT, "suid_root_logging", &grsec_enable_suid_root, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_enable_suid_root_c},
 #endif
 #ifdef CONFIG_GRKERNSEC_SIGNAL
        {GS_SIGNAL, "signal_logging", &grsec_enable_signal, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_enable_signal_c},
 #endif
 #ifdef CONFIG_GRKERNSEC_COREDUMP
        {GS_COREDUMP, "coredump", &grsec_enable_coredump, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_enable_coredump_c},
 #endif
 #ifdef CONFIG_GRKERNSEC_FORKFAIL
        {GS_FORKFAIL, "forkfail_logging", &grsec_enable_forkfail, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_enable_forkfail_c},
 #endif
 #ifdef CONFIG_GRKERNSEC_TIME
        {GS_TIME, "timechange_logging", &grsec_enable_time, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_enable_time_c},
 #endif
 #ifdef CONFIG_GRKERNSEC_KBMAP
        {GS_KBMAP, "secure_kbmap", &grsec_enable_kbmap, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_enable_kbmap_c},
 #endif
 #ifdef CONFIG_GRKERNSEC_RANDNET
        {GS_RANDNET, "rand_net", &grsec_enable_randnet, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_enable_randnet_c},
 #endif
 #ifdef CONFIG_GRKERNSEC_CHROOT
        {GS_CHROOT, "chroot_restrictions", &grsec_enable_chroot, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_enable_chroot_c},
 #endif
 #ifdef CONFIG_GRKERNSEC_CHROOT_EXECLOG
        {GS_CHROOT_EXECLOG, "chroot_execlog",
 	&grsec_enable_chroot_execlog, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_enable_chroot_execlog_c},
 #endif
 #ifdef CONFIG_GRKERNSEC_CHROOT_CAPS
        {GS_CHROOT_CAPS, "chroot_caps", &grsec_enable_chroot_caps, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_enable_chroot_caps_c},
 #endif
 #ifdef CONFIG_GRKERNSEC_TPE
        {GS_TPE, "tpe", &grsec_enable_tpe, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_enable_tpe_c},
        {GS_TPE_GID, "tpe_gid", &grsec_tpe_gid, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_tpe_gid_c},
 #endif
 #ifdef CONFIG_GRKERNSEC_TPE_GLIBC
        {GS_TPE_GLIBC, "tpe_glibc", &grsec_enable_tpe_glibc, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_enable_tpe_glibc_c},
 #endif
 #ifdef CONFIG_GRKERNSEC_TPE_ALL
        {GS_TPE_ALL, "tpe_restrict_all", &grsec_enable_tpe_all, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_enable_tpe_all_c},
 #endif
 #ifdef CONFIG_GRKERNSEC_RANDPID
        {GS_RANDPID, "rand_pids", &grsec_enable_randpid, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_enable_randpid_c},
 #endif
 #ifdef CONFIG_GRKERNSEC_RANDID
        {GS_RANDID, "rand_ip_ids", &grsec_enable_randid, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_enable_randid_c},
 #endif
 #ifdef CONFIG_GRKERNSEC_RANDSRC
        {GS_RANDSRC, "rand_tcp_src_ports", &grsec_enable_randsrc, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_enable_randsrc_c},
 #endif
 #ifdef CONFIG_GRKERNSEC_RANDPING
        {GS_RANDPING, "altered_pings", &grsec_enable_randping, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_enable_randping_c},
 #endif
 #ifdef CONFIG_GRKERNSEC_RANDTTL
        {GS_RANDTTL, "rand_ttl", &grsec_enable_randttl, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_enable_randttl_c},
        {GS_RANDTTL_THRESH, "rand_ttl_thresh", 
 	&grsec_randttl_thresh, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_randttl_thresh_c},
 #endif
 #ifdef CONFIG_GRKERNSEC_SOCKET_ALL
        {GS_SOCKET_ALL, "socket_all", &grsec_enable_socket_all, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_enable_socket_all_c},
        {GS_SOCKET_ALL_GID, "socket_all_gid", 
 	&grsec_socket_all_gid, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_socket_all_gid_c},
 #endif
 #ifdef CONFIG_GRKERNSEC_SOCKET_CLIENT
        {GS_SOCKET_CLIENT, "socket_client", 
 	&grsec_enable_socket_client, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_enable_socket_client_c},
        {GS_SOCKET_CLIENT_GID, "socket_client_gid", 
 	&grsec_socket_client_gid, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_socket_client_gid_c},
 #endif
 #ifdef CONFIG_GRKERNSEC_SOCKET_SERVER
        {GS_SOCKET_SERVER, "socket_server", 
 	&grsec_enable_socket_server, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_enable_socket_server_c},
        {GS_SOCKET_SERVER_GID, "socket_server_gid",
 	&grsec_socket_server_gid, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_socket_server_gid_c},
 #endif
 #ifdef CONFIG_GRKERNSEC_STEALTH_RST
        {GS_STEALTH_RST, "stealth_rst", &grsec_enable_stealth_rst, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_enable_stealth_rst_c},
 #endif
 #ifdef CONFIG_GRKERNSEC_STEALTH_UDP
        {GS_STEALTH_UDP, "stealth_udp", &grsec_enable_stealth_udp, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_enable_stealth_udp_c},
 #endif
 #ifdef CONFIG_GRKERNSEC_STEALTH_ICMP
        {GS_STEALTH_ICMP, "stealth_icmp", 
 	&grsec_enable_stealth_icmp, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_enable_stealth_icmp_c},
 #endif
 #ifdef CONFIG_GRKERNSEC_STEALTH_IGMP
        {GS_STEALTH_IGMP, "stealth_igmp", 
 	&grsec_enable_stealth_igmp, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_enable_stealth_igmp_c},
 #endif
 #ifdef CONFIG_GRKERNSEC_STEALTH_FLAGS
        {GS_STEALTH_FLAGS, "stealth_flags", 
 	&grsec_enable_stealth_flags, sizeof (int),
-        0640, NULL, &proc_dointvec},
+        0640, NULL, &proc_dointvec, NULL, NULL, &grsec_enable_stealth_flags_c},
 #endif
        {0}
 };
@@ -1026,7 +1026,7 @@
 		if(table->de->parent->name &&
 		(strlen(table->de->parent->name) == 10)) { 
 		if((!strcmp(table->de->parent->name,"grsecurity")) &&
-                        (write) && (*i != -1)){
+                        (write) && (*((int *) table->extra1) != 0)){
                         security_alert("attempt to modify grsecurity "
                         "sysctl values by " DEFAULTSECMSG,
                         "attempted sysctl changes", DEFAULTSECARGS);
@@ -1118,6 +1118,14 @@
 		return -EINVAL;
 	*lenp -= left;
 	filp->f_pos += *lenp;
+#ifdef CONFIG_GRKERNSEC_SYSCTL
+	if (table->de->parent->name &&
+			(strlen(table->de->parent->name) == 10) &&
+			!strcmp(table->de->parent->name,"grsecurity") &&
+			(write)) {
+		*((int *)table->extra1) = 1;
+	}
+#endif
 	return 0;
 }
 
