diff -Nur linux.org/arch/sparc64/kernel/sys_sparc32.c linux/arch/sparc64/kernel/sys_sparc32.c
--- linux.org/arch/sparc64/kernel/sys_sparc32.c	Wed Apr 10 13:55:06 2002
+++ linux/arch/sparc64/kernel/sys_sparc32.c	Tue Apr  9 13:32:18 2002
@@ -58,6 +58,8 @@
 
 #include <net/scm.h>
 
+#include <linux/quotacompat.h>
+
 /* Use this to get at 32-bit user passed pointers. */
 /* Things to consider: the low-level assembly stub does
    srl x, 0, x for first four arguments, so if you have
diff -Nur linux.org/include/asm-sparc64/dma.h linux/include/asm-sparc64/dma.h
--- linux.org/include/asm-sparc64/dma.h	Tue Feb  1 08:37:19 2000
+++ linux/include/asm-sparc64/dma.h	Wed Apr 10 13:19:47 2002
@@ -225,3 +225,4 @@
 #define DMA_CHUNK_SIZE 8192
 
 #endif /* !(_ASM_SPARC64_DMA_H) */
+#define DMA_AUTOINIT    0x10
diff -Nur linux.org/include/asm-sparc64/termbits.h linux/include/asm-sparc64/termbits.h
--- linux.org/include/asm-sparc64/termbits.h	Tue Feb 22 01:32:27 2000
+++ linux/include/asm-sparc64/termbits.h	Wed Apr 10 13:34:07 2002
@@ -171,8 +171,8 @@
    adjust CBAUD constant and drivers accordingly.
 #define B2500000  0x00001010
 #define B3000000  0x00001011
-#define B3500000  0x00001012
-#define B4000000  0x00001013  */
+#define B3500000  0x00001012  */
+#define B4000000  0x00001013
 #define CIBAUD	  0x100f0000  /* input baud rate (not used) */
 #define CMSPAR    0x40000000  /* mark or space (stick) parity */
 #define CRTSCTS	  0x80000000  /* flow control */
diff -Nur linux.org/include/asm-sparc64/vfc_ioctls.h linux/include/asm-sparc64/vfc_ioctls.h
--- linux.org/include/asm-sparc64/vfc_ioctls.h	Thu Jan  1 01:00:00 1970
+++ linux/include/asm-sparc64/vfc_ioctls.h	Tue Apr 15 01:28:21 1997
@@ -0,0 +1,58 @@
+/* Copyright (c) 1996 by Manish Vachharajani */
+
+#ifndef _LINUX_VFC_IOCTLS_H_
+#define	_LINUX_VFC_IOCTLS_H_
+
+	/* IOCTLs */
+#define VFC_IOCTL(a)          (('j' << 8) | a)
+#define VFCGCTRL	(VFC_IOCTL (0))	        /* get vfc attributes */
+#define VFCSCTRL	(VFC_IOCTL (1))  	/* set vfc attributes */
+#define VFCGVID		(VFC_IOCTL (2)) 	/* get video decoder attributes */
+#define VFCSVID		(VFC_IOCTL (3))	        /* set video decoder attributes */
+#define VFCHUE		(VFC_IOCTL (4))   	/* set hue */
+#define VFCPORTCHG	(VFC_IOCTL (5))  	/* change port */
+#define VFCRDINFO	(VFC_IOCTL (6))  	/* read info */
+
+	/* Options for setting the vfc attributes and status */
+#define MEMPRST		0x1	/* reset FIFO ptr. */
+#define CAPTRCMD	0x2	/* start capture and wait */
+#define DIAGMODE	0x3	/* diag mode */
+#define NORMMODE	0x4	/* normal mode */
+#define CAPTRSTR	0x5	/* start capture */
+#define CAPTRWAIT	0x6	/* wait for capture to finish */
+
+
+	/* Options for the decoder */
+#define STD_NTSC	0x1	/* NTSC mode */
+#define STD_PAL		0x2	/* PAL mode */
+#define COLOR_ON	0x3	/* force color ON */
+#define MONO		0x4	/* force color OFF */
+
+	/* Values returned by ioctl 2 */
+
+#define NO_LOCK	        1
+#define NTSC_COLOR	2
+#define NTSC_NOCOLOR    3
+#define PAL_COLOR	4
+#define PAL_NOCOLOR	5
+
+/* Not too sure what this does yet */
+	/* Options for setting Field number */
+#define ODD_FIELD	0x1
+#define EVEN_FIELD	0x0
+#define ACTIVE_ONLY     0x2
+#define NON_ACTIVE	0x0
+
+/* Debug options */
+#define VFC_I2C_SEND 0
+#define VFC_I2C_RECV 1
+
+struct vfc_debug_inout
+{
+	unsigned long addr;
+	unsigned long ret;
+	unsigned long len;
+	unsigned char *buffer;
+};
+
+#endif /* _LINUX_VFC_IOCTLS_H_ */
