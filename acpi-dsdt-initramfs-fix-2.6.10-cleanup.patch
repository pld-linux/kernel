--- linux-2.6.14-rc2/init/initramfs.c.orig	2005-09-20 03:00:41.000000000 +0000
+++ linux-2.6.14-rc2/init/initramfs.c	2005-09-30 22:29:39.415278696 +0000
@@ -476,6 +476,31 @@
 
 #endif
 
+#ifdef CONFIG_ACPI_CUSTOM_DSDT_INITRD
+/*
+ * Locates the beginning of the acpi dsdt in the init image
+ * - returns NULL if it's not found
+ */
+static unsigned char* __init find_dsdt(void)
+{
+	unsigned char start_signature[] = "INITRDDSDT123DSDT123";
+	unsigned char *data = (unsigned char*)initrd_start;
+
+	if (!initrd_start)
+		return NULL;
+
+	//find the start signature:
+	for (; data < (unsigned char*)initrd_end && 
+		strncmp(data, start_signature, sizeof(start_signature) - 1); 
+		data++); 
+
+	//was the signature found?
+	return (data < (unsigned char*)initrd_end) ? data : NULL;
+}
+#else
+static inline unsigned char* find_dsdt(void) {return NULL;}
+#endif
+
 void __init populate_rootfs(void)
 {
 	char *err = unpack_to_rootfs(__initramfs_start,
@@ -485,13 +510,22 @@
 #ifdef CONFIG_BLK_DEV_INITRD
 	if (initrd_start) {
 		int fd;
+		unsigned long initramfs_len;
+		unsigned char* acpi_dsdt_start = find_dsdt();
+
+		//check to see if there's a DSDT in the image:
+		if (acpi_dsdt_start)
+			initramfs_len = (unsigned long)acpi_dsdt_start - initrd_start;
+		else
+			initramfs_len = initrd_end - initrd_start;
+
 		printk(KERN_INFO "checking if image is initramfs...");
 		err = unpack_to_rootfs((char *)initrd_start,
-			initrd_end - initrd_start, 1);
+			initramfs_len, 1);
 		if (!err) {
 			printk(" it is\n");
 			unpack_to_rootfs((char *)initrd_start,
-				initrd_end - initrd_start, 0);
+				initramfs_len, 0);
 			free_initrd();
 			return;
 		}
@@ -499,7 +533,7 @@
 		fd = sys_open("/initrd.image", O_WRONLY|O_CREAT, 700);
 		if (fd >= 0) {
 			sys_write(fd, (char *)initrd_start,
-					initrd_end - initrd_start);
+					initramfs_len);
 			sys_close(fd);
 			free_initrd();
 		}
