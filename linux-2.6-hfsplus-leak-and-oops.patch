Subject: [PATCH] hfsplus: don't leak sb->s_fs_info and don't oops on bad
From: Colin Leroy <colin@colino.net>

This is the second attempt at fixing two bugs in hfsplus; this patch
fixes the leak of sb->s_fs_info, and also fixes an oops [1] when trying
to mount something that isn't hfsplus with hfsplus.

The first hunk is just a protection, the second one fixes the oops, and 
the third one fixes the leak.

[1] http://colino.net/tmp/hfsplus_oops.txt

Signed-off-by: Colin Leroy <colin@colino.net>

--- linux-2.6.11.8/fs/hfsplus/super.c.orig	2005-04-30 03:24:32.000000000 +0200
+++ linux-2.6.11.8/fs/hfsplus/super.c	2005-05-03 10:47:49.000000000 +0200
@@ -206,9 +206,14 @@
 
 static void hfsplus_put_super(struct super_block *sb)
 {
+	if (!sb->s_fs_info)
+		return;
+
 	dprint(DBG_SUPER, "hfsplus_put_super\n");
 	if (!(sb->s_flags & MS_RDONLY)) {
 		struct hfsplus_vh *vhdr = HFSPLUS_SB(sb).s_vhdr;
+		if (!vhdr)
+			goto cleanup;
 
 		vhdr->modify_date = hfsp_now2mt();
 		vhdr->attributes |= cpu_to_be32(HFSPLUS_VOL_UNMNT);
@@ -223,6 +228,10 @@
 	iput(HFSPLUS_SB(sb).alloc_file);
 	iput(HFSPLUS_SB(sb).hidden_dir);
 	brelse(HFSPLUS_SB(sb).s_vhbh);
+
+cleanup:
+	kfree(sb->s_fs_info);
+	sb->s_fs_info = NULL;
 }
 
 static int hfsplus_statfs(struct super_block *sb, struct kstatfs *buf)
