--- linux-2.6.8-rc3/arch/i386/crypto/Makefile.orig	2004-08-07 14:54:25.000000000 +0200
+++ linux-2.6.8-rc3/arch/i386/crypto/Makefile	2004-08-07 18:41:49.000000000 +0200
@@ -6,4 +6,4 @@
 
 obj-$(CONFIG_CRYPTO_AES_586) += aes-i586.o
 
-aes-i586-y := aes-i586-asm.o aes.o
+aes-i586-objs := aes-i586-asm.o aes.o

--- linux-2.6.8/drivers/scsi/scsi_sysfs.c.orig	2004-08-14 14:36:42.953272032 +0200
+++ linux-2.6.8/drivers/scsi/scsi_sysfs.c	2004-08-14 14:36:47.490582256 +0200
@@ -190,6 +190,7 @@
         .name		= "scsi",
         .match		= scsi_bus_match,
 };
+EXPORT_SYMBOL(scsi_bus_type);
 
 int scsi_sysfs_register(void)
 {
diff -puN include/linux/spinlock.h~fix_outofline_spinlocks include/linux/spinlock.h
--- gr_work/include/linux/spinlock.h~fix_outofline_spinlocks	2004-09-05 02:05:53.243858818 -0500
+++ gr_work-anton/include/linux/spinlock.h	2004-09-05 02:06:06.177805993 -0500
@@ -38,7 +38,7 @@
 #ifdef CONFIG_SMP
 #include <asm/spinlock.h>
 
-#define __lockfunc fastcall __attribute__((section(".spinlock.text")))
+#define __lockfunc fastcall __attribute__((section(".lock.text")))
 
 int __lockfunc _spin_trylock(spinlock_t *lock);
 int __lockfunc _write_trylock(rwlock_t *lock);
diff -u -pruaN linux-orig/arch/i386/mm/init.c
linux-new/arch/i386/mm/init.c
--- linux-orig/arch/i386/mm/init.c  2004-09-26 03:43:57.944613000 +1000
+++ linux-new/arch/i386/mm/init.c   2004-09-28 02:37:21.787922000 +1000
@@ -41,6 +41,7 @@
 #include <asm/sections.h>
 
 unsigned int __VMALLOC_RESERVE = 128 << 20;
+EXPORT_SYMBOL(__VMALLOC_RESERVE);
 
 DEFINE_PER_CPU(struct mmu_gather, mmu_gathers);
 unsigned long highstart_pfn, highend_pfn;
diff -uNr linux-2.6.9.orig/arch/i386/kernel/irq.c linux-2.6.9/arch/i386/kernel/irq.c
--- linux-2.6.9/arch/i386/kernel/irq.c.orig	2004-10-20 18:26:32.738937568 +0200
+++ linux-2.6.9/arch/i386/kernel/irq.c	2004-10-20 18:29:14.241385464 +0200
@@ -85,7 +85,7 @@
 		/* build the stack frame on the IRQ stack */
 		isp = (u32*) ((char*)irqctx + sizeof(*irqctx));
 		irqctx->tinfo.task = curctx->tinfo.task;
-		irqctx->tinfo.previous_esp = current_stack_pointer();
+		irqctx->tinfo.previous_esp = current_stack_pointer;
 
 		*--isp = (u32) &regs;
 		*--isp = (u32) irq;
@@ -168,7 +168,7 @@
 		curctx = current_thread_info();
 		irqctx = softirq_ctx[smp_processor_id()];
 		irqctx->tinfo.task = curctx->task;
-		irqctx->tinfo.previous_esp = current_stack_pointer();
+		irqctx->tinfo.previous_esp = current_stack_pointer;
 
 		/* build the stack frame on the softirq stack */
 		isp = (u32*) ((char*)irqctx + sizeof(*irqctx));
diff -uNr linux-2.6.9.orig/include/asm-i386/thread_info.h linux-2.6.9/include/asm-i386/thread_info.h
--- linux-2.6.9/include/asm-i386/thread_info.h.orig	2004-10-20 18:33:35.330693856 +0200
+++ linux-2.6.9/include/asm-i386/thread_info.h	2004-10-20 18:34:06.293986720 +0200
@@ -92,12 +92,7 @@
 }
 
 /* how to get the current stack pointer from C */
-static inline unsigned long current_stack_pointer(void)
-{
-	unsigned long ti;
-	__asm__("movl %%esp,%0; ":"=r" (ti) : );
-	return ti;
-}
+register unsigned long current_stack_pointer asm("esp");
 
 /* thread information allocation */
 #ifdef CONFIG_DEBUG_STACK_USAGE
