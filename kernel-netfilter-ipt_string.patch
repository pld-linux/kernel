--- linux-2.6.4+grsec/net/ipv4/netfilter/ipt_string.c.orig	2004-04-16 16:31:10.000000000 +0200
+++ linux-2.6.4+grsec/net/ipv4/netfilter/ipt_string.c	2004-04-16 18:22:09.617878360 +0200
@@ -21,6 +21,7 @@
 #include <linux/module.h>
 #include <linux/skbuff.h>
 #include <linux/file.h>
+#include <linux/threads.h>
 #include <net/sock.h>
 
 #include <linux/netfilter_ipv4/ip_tables.h>
@@ -163,7 +164,7 @@
 	int c;
 	
 	if ( bm_string_data ) {
-		for(c=0; c<smp_num_cpus; c++) {
+		for(c=0; c<NR_CPUS; c++) {
 			if ( bm_string_data[c].shift ) kfree(bm_string_data[c].shift);
 			if ( bm_string_data[c].skip ) kfree(bm_string_data[c].skip);
 			if ( bm_string_data[c].len ) kfree(bm_string_data[c].len);
@@ -181,7 +182,7 @@
 	size_t tlen;
 	size_t alen;
 
-	tlen=sizeof(struct string_per_cpu)*smp_num_cpus;
+	tlen=sizeof(struct string_per_cpu)*NR_CPUS;
 	alen=sizeof(int)*BM_MAX_HLEN;
 	
 	/* allocate array of structures */
@@ -192,7 +193,7 @@
 	memset(bm_string_data, 0, tlen);
 	
 	/* allocate our skip/shift tables */
-	for(c=0; c<smp_num_cpus; c++) {
+	for(c=0; c<NR_CPUS; c++) {
 		if ( !(bm_string_data[c].shift=kmalloc(alen, GFP_KERNEL)) )
 			goto alloc_fail;
 		if ( !(bm_string_data[c].skip=kmalloc(alen, GFP_KERNEL)) )
