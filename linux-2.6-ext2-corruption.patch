Whilst trying to stress test a Promise SX8 card, we stumbled across
some nasty filesystem corruption in ext2. Our tests involved
creating an ext2 partition, mounting, running several concurrent
fsx's over it, umounting, and fsck'ing, all scripted[1]. The fsck
would always return with errors.

This regression was traced back to a change between 2.6.9 and
2.6.10, which moves the functionality of ext2_put_inode into
ext2_clear_inode.  The attached patch reverses this change, and
eliminated the source of corruption.

Whilst stress tesing the same Promise SX8 card on an ext3 partition
(amd64 machine) also with fsx, we encountered a kernel panic who's
backtrace looked like:
  ext3_discard_reservation
  ext3_truncate
  .
  .
  .
  do_truncate
  sys_ftruncate
Could this same change (which was in ext3 also) be responsible for
this?

Bernard.

[1] http://matt.ucc.asn.au/ext2bad/

--- a/fs/ext2/ext2.h	2004-10-19 05:55:29.000000000 +0800
+++ b/fs/ext2/ext2.h	2004-12-25 05:35:40.000000000 +0800
@@ -116,6 +116,7 @@ extern unsigned long ext2_count_free (st
 /* inode.c */
 extern void ext2_read_inode (struct inode *);
 extern int ext2_write_inode (struct inode *, int);
+extern void ext2_put_inode (struct inode *);
 extern void ext2_delete_inode (struct inode *);
 extern int ext2_sync_inode (struct inode *);
 extern void ext2_discard_prealloc (struct inode *);
--- a/fs/ext2/inode.c	2004-10-19 05:53:11.000000000 +0800
+++ b/fs/ext2/inode.c	2004-12-25 05:33:51.000000000 +0800
@@ -53,6 +53,19 @@ static inline int ext2_inode_is_fast_sym
 }
 
 /*
+ * Called at each iput().
+ *
+ * The inode may be "bad" if ext2_read_inode() saw an error from
+ * ext2_get_inode(), so we need to check that to avoid freeing random disk
+ * blocks.
+ */
+void ext2_put_inode(struct inode *inode)
+{
+	if (!is_bad_inode(inode))
+		ext2_discard_prealloc(inode);
+}
+
+/*
  * Called at the last iput() if i_nlink is zero.
  */
 void ext2_delete_inode (struct inode * inode)
--- a/fs/ext2/super.c	2004-10-19 05:54:38.000000000 +0800
+++ b/fs/ext2/super.c	2004-12-25 05:35:01.000000000 +0800
@@ -198,8 +198,6 @@
 		ei->i_default_acl = EXT2_ACL_NOT_CACHED;
 	}
 #endif
-	if (!is_bad_inode(inode))
-		ext2_discard_prealloc(inode);
 }
 
 
@@ -213,6 +211,7 @@
 	.destroy_inode	= ext2_destroy_inode,
 	.read_inode	= ext2_read_inode,
 	.write_inode	= ext2_write_inode,
+	.put_inode	= ext2_put_inode,
 	.delete_inode	= ext2_delete_inode,
 	.put_super	= ext2_put_super,
 	.write_super	= ext2_write_super,
