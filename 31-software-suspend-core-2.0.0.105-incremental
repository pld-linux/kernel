diff -ruN software-suspend-core-2.0.0.104/include/linux/suspend-common.h software-suspend-core-2.0.0.105/include/linux/suspend-common.h
--- software-suspend-core-2.0.0.104/include/linux/suspend-common.h	2004-08-30 20:06:29.316407584 +1000
+++ software-suspend-core-2.0.0.105/include/linux/suspend-common.h	2004-08-30 20:06:36.064381736 +1000
@@ -167,7 +167,13 @@
 extern void prepare_status(int printalways, int clearbar, const char *fmt, ...);
 extern void abort_suspend(const char *fmt, ...);
 
-void thaw_processes(void);
+/* Kernel threads are type 3 */
+#define FREEZER_ALL_THREADS 0
+#define FREEZER_KERNEL_THREADS 3
+
+extern void thaw_processes(void);
+extern void thaw_kernel_threads(void);
+
 extern int suspend_snprintf(char * buffer, int buffer_size,
 		const char *fmt, ...);
 
@@ -182,11 +188,6 @@
 unsigned long update_status(unsigned long value, unsigned long maximum,
 		const char *fmt, ...);
 
-#ifdef CONFIG_SOFTWARE_SUSPEND_VARIATION_ANALYSIS
-extern void suspend_calculate_checksums(void);
-extern void suspend_check_checksums(void);
-#endif
-
 #define PBEPAGE_START(pbe) (((unsigned long) (pbe)) & PAGE_MASK)
 extern unsigned long memory_for_plugins(void);
 extern int expected_compression_ratio(void);
@@ -278,7 +279,6 @@
 
 extern unsigned long * in_use_map;
 extern unsigned long * pageset2_map;
-extern unsigned long * checksum_map;
 
 #define PAGENUMBER(page) (page-mem_map)
 #define PAGEINDEX(page) ((PAGENUMBER(page))/(8*sizeof(unsigned long)))
@@ -309,18 +309,6 @@
 #define ClearPagePageset2(page)	\
 	clear_bit(PAGEBIT(page), &pageset2_map[PAGEINDEX(page)])
 
-#ifdef CONFIG_SOFTWARE_SUSPEND_VARIATION_ANALYSIS
-#define PageChecksumIgnore(page) \
-	test_bit(PAGEBIT(page), &checksum_map[PAGEINDEX(page)])
-#define SetPageChecksumIgnore(page) \
-	set_bit(PAGEBIT(page), &checksum_map[PAGEINDEX(page)])
-#define ClearPageChecksumIgnore(page) \
-	clear_bit(PAGEBIT(page), &checksum_map[PAGEINDEX(page)])
-#else
-#define PageChecksumIgnore(page) (0)
-#define SetPageChecksumIgnore(page) do { } while(0)
-#define ClearPageChecksumIgnore(page) do { } while(0)
-#endif
 /* 
  *   #defs that are dependant on CONFIG_SOFTWARE_SUSPEND_DEBUG
  *
@@ -400,7 +388,7 @@
 	int (*post_load_ranges) (void);
 	
 	/* Attempt to parse an image location */
-	int (*parse_image_location) (char * buffer, int boot_time, int only_writer);
+	int (*parse_image_location) (char * buffer, int only_writer);
 
 	/* Determine whether image exists that we can restore */
 	int (*image_exists) (void);
@@ -593,7 +581,7 @@
 int print_module_list_to_buffer(char * buffer, int size);
 
 extern unsigned int nr_suspends;
-extern char resume_file[];
+extern char resume2_file[];
 
 extern int suspend_wait_for_keypress(void);
 
@@ -604,4 +592,5 @@
 #define smp_lowlevel_suspend() do { } while(0)
 #define smp_continue() do { local_irq_enable(); } while(0)
 #endif
+
 #endif /* #ifndef SWSUSP_COMMON_H */
diff -ruN software-suspend-core-2.0.0.104/include/linux/suspend-debug.h software-suspend-core-2.0.0.105/include/linux/suspend-debug.h
--- software-suspend-core-2.0.0.104/include/linux/suspend-debug.h	2004-08-30 20:06:29.317407432 +1000
+++ software-suspend-core-2.0.0.105/include/linux/suspend-debug.h	2004-08-30 20:06:37.098224568 +1000
@@ -5,13 +5,9 @@
 /* Solely for comparison with the version specific patch revision */
 #define SWSUSP_CORE_REVISION 0x201
 
-#define SWSUSP_CORE_VERSION "2.0.0.104"
+#define SWSUSP_CORE_VERSION "2.0.0.105"
 #define name_suspend "Software Suspend " SWSUSP_CORE_VERSION ": "
 
-/* Same length to ensure one overwrites the other */
-#define console_suspend " S U S P E N D   T O   D I S K " 
-#define console_resume  "R E S U M E   F R O M   D I S K"
-
 extern unsigned long suspend_action;
 extern unsigned long suspend_result;
 extern unsigned long suspend_debug_state;
diff -ruN software-suspend-core-2.0.0.104/include/linux/suspend.h software-suspend-core-2.0.0.105/include/linux/suspend.h
--- software-suspend-core-2.0.0.104/include/linux/suspend.h	2004-08-30 20:06:29.318407280 +1000
+++ software-suspend-core-2.0.0.105/include/linux/suspend.h	2004-08-30 20:06:37.099224416 +1000
@@ -33,6 +33,7 @@
 #define SOFTWARE_SUSPEND_RESUMED_BEFORE		32768
 #define SUSPEND_RUNNING_INITRD			131072
 #define SUSPEND_RESUME_DONE			262144
+#define SOFTWARE_SUSPEND_BOOT_TIME		524288
 extern int suspend_min_free;
 
 #ifdef CONFIG_MTRR
@@ -97,6 +98,6 @@
 	void (* early_boot_plugins) (void);
 	int (* keypress) (unsigned int keycode);
 };
-extern struct suspend2_core_ops * suspend2_core_ops;
+extern volatile struct suspend2_core_ops * suspend2_core_ops;
 
 #endif /* _LINUX_SWSUSP_H */
diff -ruN software-suspend-core-2.0.0.104/kernel/power/io.c software-suspend-core-2.0.0.105/kernel/power/io.c
--- software-suspend-core-2.0.0.104/kernel/power/io.c	2004-08-30 20:06:29.323406520 +1000
+++ software-suspend-core-2.0.0.105/kernel/power/io.c	2004-08-30 20:06:37.103223808 +1000
@@ -23,7 +23,7 @@
 extern int suspend_dbg_used;
 extern struct pagedir __nosavedata pagedir_resume;
 extern struct range * unused_ranges;
-extern int suspend_io_time[2][2];
+extern volatile int suspend_io_time[2][2];
 extern int suspend2_prepare_console(void);
 
 /* Routines we call when reloading the original kernel */
diff -ruN software-suspend-core-2.0.0.104/kernel/power/memory_pool.c software-suspend-core-2.0.0.105/kernel/power/memory_pool.c
--- software-suspend-core-2.0.0.104/kernel/power/memory_pool.c	2004-08-30 20:06:29.325406216 +1000
+++ software-suspend-core-2.0.0.105/kernel/power/memory_pool.c	2004-08-30 20:06:37.106223352 +1000
@@ -110,7 +110,6 @@
 
 static struct page * get_from_pool(struct memory_pool * pool, int order)
 {
-	int j;
 	struct page * page;
 
 	if (!pool->level[order])
@@ -120,9 +119,6 @@
 	list_del(&page->lru);
 	pool->level[order]--;
 
-	for (j = 0; j < (1 << order); j++)
-		ClearPageChecksumIgnore(page + j);
-
 	if (page_count(page) != 1)
 		printk("Error getting page %p from memory pool. "
 			"Page count is %d (should be 1).\n",
@@ -143,14 +139,9 @@
 
 static void add_to_pool(struct memory_pool * pool, int order, struct page * this)
 {
-	int j;
-
 	pool->level[order]++;
 	list_add(&this->lru, &pool->contents[order]);
 	
-	for (j = 0; j < (1 << order); j++)
-		SetPageChecksumIgnore(this + j);
-	
 	display_memory_pool_pages();
 }
 
@@ -315,7 +306,9 @@
 void free_suspend_pool_pages(struct page *page, unsigned int order)
 {
 	unsigned long flags;
+#ifndef CONFIG_MMU
 	int i;
+#endif
 	struct memory_pool * pool = &normal_pool;
 
 	suspend_message(SUSPEND_MEM_POOL, SUSPEND_VERBOSE, 1, 
@@ -325,13 +318,12 @@
 	if (PageHighMem(page))
 		pool = &highmem_pool;
 
-	for (i = 0; i < (1 << order); i++) {
 #ifdef CONFIG_MMU
-		if (!i)
+	set_page_count(page, 1);
+#else
+	for (i = 0; i < (1 << order); i++)
+		set_page_count(page + i, 1);
 #endif
-			set_page_count(page + i, 1);
-		SetPageChecksumIgnore(page + i);
-	}
 
 	spin_lock_irqsave(&suspend_memory_pool_lock, flags);
 	add_to_pool(pool, order, page);
diff -ruN software-suspend-core-2.0.0.104/kernel/power/pagedir.c software-suspend-core-2.0.0.105/kernel/power/pagedir.c
--- software-suspend-core-2.0.0.104/kernel/power/pagedir.c	2004-08-30 20:06:29.326406064 +1000
+++ software-suspend-core-2.0.0.105/kernel/power/pagedir.c	2004-08-30 20:06:37.107223200 +1000
@@ -195,7 +195,7 @@
 
 	if (num_to_alloc) {
 		int num_added = 0, numnosaveallocated=0;
-		int origallocd = p->allocdranges.size;
+		int origallocd = alloc_from + p->allocdranges.size;
 	
 		PRINTFREEMEM("prior to attempt");
 
@@ -221,8 +221,8 @@
 				suspend_message(SUSPEND_PAGESETS, SUSPEND_VERBOSE, 1,
 					"   Allocated (extra) memory for pages"
 					" from %d-%d (%d pages).\n",
-					alloc_from, pageset_size - 1, 
-					p->allocdranges.size - origallocd);
+					origallocd + 1, pageset_size, 
+					pageset_size - origallocd);
 				printk("Couldn't get enough yet."
 						" %d pages short.\n",
 						num_to_alloc - num_added);
@@ -245,8 +245,8 @@
 		suspend_message(SUSPEND_PAGESETS, SUSPEND_VERBOSE, 1,
 			"   Allocated (extra) memory for pages "
 			"from %d-%d (%d pages).\n",
-			alloc_from, pageset_size - 1,
-			p->allocdranges.size - origallocd);
+			origallocd + 1, pageset_size, 
+			pageset_size - origallocd);
 	}
 
 	p->pageset_size = pageset_size;
@@ -309,7 +309,6 @@
 				numpageset2--;
 			}
 		}
-		put_rangepages_list();
 	}
 
 	/* Finally, ensure that Slab pages are not Pageset2. */
diff -ruN software-suspend-core-2.0.0.104/kernel/power/plugins.c software-suspend-core-2.0.0.105/kernel/power/plugins.c
--- software-suspend-core-2.0.0.104/kernel/power/plugins.c	2004-08-30 20:06:29.327405912 +1000
+++ software-suspend-core-2.0.0.105/kernel/power/plugins.c	2004-08-30 20:06:37.108223048 +1000
@@ -155,7 +155,7 @@
 	return len;
 }
 
-extern int attempt_to_parse_resume_device(int boot_time);
+extern int attempt_to_parse_resume_device(void);
 
 int suspend_initialise_plugin_lists(void) {
 	INIT_LIST_HEAD(&suspend_filters);
@@ -178,8 +178,9 @@
 			list_add_tail(&plugin->ops.writer.writer_list,
 					&suspend_writers);
 			num_writers++;
-			if (!active_writer)
-				attempt_to_parse_resume_device(0);
+			if ((!active_writer) &&
+			    (!(software_suspend_state & SOFTWARE_SUSPEND_BOOT_TIME)))
+				attempt_to_parse_resume_device();
 			break;
 
 		case UI_PLUGIN:
@@ -210,7 +211,7 @@
 			list_del(&plugin->ops.writer.writer_list);
 			num_writers--;
 			if (active_writer == plugin)
-				attempt_to_parse_resume_device(0);
+				attempt_to_parse_resume_device();
 			break;
 		
 		case UI_PLUGIN:
diff -ruN software-suspend-core-2.0.0.104/kernel/power/prepare_image.c software-suspend-core-2.0.0.105/kernel/power/prepare_image.c
--- software-suspend-core-2.0.0.104/kernel/power/prepare_image.c	2004-08-30 20:06:29.329405608 +1000
+++ software-suspend-core-2.0.0.105/kernel/power/prepare_image.c	2004-08-30 20:06:37.110222744 +1000
@@ -405,11 +405,6 @@
 	return result;
 }
 
-#ifdef CONFIG_SOFTWARE_SUSPEND_VARIATION_ANALYSIS
-extern void suspend_allocate_checksum_pages(void);
-extern void suspend_calculate_checksums(void);
-#endif
-
 /* update_image
  *
  * Allocate [more] memory and storage for the image.
@@ -471,13 +466,6 @@
 
 		suspend_store_free_mem(SUSPEND_FREE_WRITER_STORAGE, 0);
 
-#ifdef CONFIG_SOFTWARE_SUSPEND_VARIATION_ANALYSIS
-		suspend_message(SUSPEND_ANY_SECTION, SUSPEND_MEDIUM, 1,
-				"-- Allocate checksum pages.\n");
-
-		suspend_allocate_checksum_pages();
-#endif
-
 		result = recalculate_stats();
 		display_stats();
 
@@ -659,6 +647,8 @@
 	return result;
 }
 
+extern asmlinkage long sys_sync(void);
+
 static int eat_memory(void)
 {
 	int orig_memory_still_to_eat, last_amount_needed = 0, times_criteria_met = 0;
@@ -720,6 +710,12 @@
 	}
 
 	grab_free_memory();
+	
+	software_suspend_state |= SOFTWARE_SUSPEND_USE_MEMORY_POOL;
+	thaw_kernel_threads();
+	sys_sync();
+	freeze_processes(1);
+	software_suspend_state &= ~SOFTWARE_SUSPEND_USE_MEMORY_POOL;
 
 	suspend_message(SUSPEND_EAT_MEMORY, 1, SUSPEND_VERBOSE, "\n");
 	
diff -ruN software-suspend-core-2.0.0.104/kernel/power/proc.c software-suspend-core-2.0.0.105/kernel/power/proc.c
--- software-suspend-core-2.0.0.104/kernel/power/proc.c	2004-08-30 20:06:29.330405456 +1000
+++ software-suspend-core-2.0.0.105/kernel/power/proc.c	2004-08-30 20:06:37.111222592 +1000
@@ -55,7 +55,7 @@
 static struct list_head suspend_proc_entries;
 static struct proc_dir_entry *suspend_dir;
 
-extern char resume_file[256];	/* For resume= kernel option */
+extern char resume2_file[256];	/* For resume= kernel option */
 
 /*
  * proc_software_suspend_pending
diff -ruN software-suspend-core-2.0.0.104/kernel/power/process.c software-suspend-core-2.0.0.105/kernel/power/process.c
--- software-suspend-core-2.0.0.104/kernel/power/process.c	2004-08-30 20:06:29.331405304 +1000
+++ software-suspend-core-2.0.0.105/kernel/power/process.c	2004-08-30 20:06:37.112222440 +1000
@@ -40,11 +40,11 @@
 
 #include <linux/suspend-common.h>
 
-struct suspend2_core_ops * suspend2_core_ops = NULL;
+volatile struct suspend2_core_ops * suspend2_core_ops = NULL;
 unsigned long suspend_action = 0;
 unsigned long suspend_result = 0;
 unsigned long suspend_debug_state = 0;
-unsigned long software_suspend_state = SOFTWARE_SUSPEND_DISABLED;
+unsigned long software_suspend_state = SOFTWARE_SUSPEND_DISABLED | SOFTWARE_SUSPEND_BOOT_TIME;
 unsigned int suspend_task = 0;
 
 char idletimeout;
@@ -55,7 +55,6 @@
 #define FREEZER_TOTAL_TIMEOUT (5 * HZ)
 #define FREEZER_CHECK_TIMEOUT (HZ)
 
-
 /* Locks */
 spinlock_t suspend_irq_lock = SPIN_LOCK_UNLOCKED;
 unsigned long suspendirqflags;
@@ -379,7 +378,7 @@
  * 
  * Return value: 0 = success, else # of processes that we failed to stop.
  */
-extern int sync_old_buffers(void);
+extern asmlinkage long sys_sync(void);
 
 /* Freeze_processes.
  * If the flag no_progress is non-zero, progress bars not be updated.
@@ -436,7 +435,7 @@
 		suspend2_core_ops->prepare_status(1, 1,
 			"Freezing processes: Syncing remaining I/O.");
 
-	do_suspend_sync();
+	sys_sync();
 
 #if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,0)
 	spin_lock_irqsave(&io_request_lock, iorequestflags);
@@ -470,7 +469,7 @@
 	goto out;
 }
 
-void thaw_processes(void)
+static void __thaw_processes(int which_threads)
 {
 	struct task_struct FOR_EACH_THREAD_TASK_STRUCTS;
 	suspend_message(SUSPEND_FREEZER, SUSPEND_LOW, 1, "Thawing tasks\n");
@@ -492,6 +491,9 @@
 
 	FOR_EACH_THREAD_START {
 		if (p->flags & PF_FROZEN) {
+			if ((which_threads == FREEZER_KERNEL_THREADS) &&
+				(p->mm))
+				continue;
 			suspend_message(SUSPEND_FREEZER, SUSPEND_VERBOSE, 0,
 					"Waking %5d: %s.\n", p->pid, p->comm);
 			p->flags &= ~PF_FROZEN;
@@ -508,6 +510,16 @@
 	preempt_enable();
 }
 
+void thaw_processes(void)
+{
+	__thaw_processes(FREEZER_ALL_THREADS);
+}
+
+void thaw_kernel_threads(void)
+{
+	__thaw_processes(FREEZER_KERNEL_THREADS);
+}
+
 EXPORT_SYMBOL(suspend_num_active);
 EXPORT_SYMBOL(idletimeout);
 EXPORT_SYMBOL(suspend_task);
@@ -516,6 +528,7 @@
 EXPORT_SYMBOL(show_task);
 EXPORT_SYMBOL(freeze_processes);
 EXPORT_SYMBOL(thaw_processes);
+EXPORT_SYMBOL(thaw_kernel_threads);
 EXPORT_SYMBOL(suspend_irq_lock);
 EXPORT_SYMBOL(suspendirqflags);
 #ifdef CONFIG_SMP
diff -ruN software-suspend-core-2.0.0.104/kernel/power/range.c software-suspend-core-2.0.0.105/kernel/power/range.c
--- software-suspend-core-2.0.0.104/kernel/power/range.c	2004-08-30 20:06:29.333405000 +1000
+++ software-suspend-core-2.0.0.105/kernel/power/range.c	2004-08-30 20:06:37.114222136 +1000
@@ -635,7 +635,7 @@
 {
 	struct range * this_range_page = first_range_page;
 	int i, j, pages_needed, num_in_this_page;
-	unsigned long * current_list_page = (unsigned long *) first_range_page;
+	unsigned long * current_list_page = range_pagelist;
 	unsigned long * prev_list_page = NULL;
 
 	pages_needed =
@@ -643,21 +643,25 @@
 	
 	for (i = 0; i < pages_needed; i++) {
 		int page_start = i * POINTERS_PER_PAGE;
-		current_list_page =
-			(unsigned long *) get_grabbed_pages(0);
-		if (!current_list_page)
-			current_list_page = (unsigned long *) get_zeroed_page(GFP_ATOMIC);
+		
 		if (!current_list_page) {
-			abort_suspend("Unable to allocate memory for a range pages list.");
-			printk("Number of range pages is %d.\n", num_range_pages);
-			return -ENOMEM;
-		}
+			current_list_page =
+				(unsigned long *) get_grabbed_pages(0);
+			if (!current_list_page)
+				current_list_page = (unsigned long *) get_zeroed_page(GFP_ATOMIC);
+			if (!current_list_page) {
+				abort_suspend("Unable to allocate memory for a range pages list.");
+				printk("Number of range pages is %d.\n", num_range_pages);
+				return -ENOMEM;
+			}
 
-		if (!prev_list_page)
-			range_pagelist = current_list_page;
-		else {
-			*prev_list_page = (unsigned long) current_list_page;
-			prev_list_page = current_list_page;
+			current_list_page[0] = 0;
+			if (!prev_list_page)
+				range_pagelist = current_list_page;
+			else {
+				*prev_list_page = (unsigned long) current_list_page;
+				prev_list_page = current_list_page;
+			}
 		}
 	
 		num_in_this_page = num_range_pages - page_start;
@@ -665,11 +669,17 @@
 			num_in_this_page = POINTERS_PER_PAGE;
 		
 		for (j = 1; j <= num_in_this_page; j++) {
-			current_list_page[page_start+j] = (unsigned long) this_range_page;
+			current_list_page[j] = (unsigned long) this_range_page;
 
 			this_range_page = (struct range *) (((unsigned long)
 				(*RANGEPAGELINK(this_range_page))) & PAGE_MASK);
 		}
+		
+		for (j = (num_in_this_page + 1); j <= POINTERS_PER_PAGE; j++)
+			current_list_page[j] = 0;
+
+		if ((num_range_pages - page_start) > POINTERS_PER_PAGE)
+			current_list_page = (unsigned long *) current_list_page[0];
 	}
 
 	return 0;
@@ -686,20 +696,6 @@
 	}
 }
 
-#ifdef CONFIG_SOFTWARE_SUSPEND_VARIATION_ANALYSIS
-int PageRangePage(char * seeking)
-{
-	int i;
-	
-	for (i = 1; i <= num_range_pages; i++)
-		if (get_rangepages_list_entry(i) == 
-			(unsigned long *) seeking)
-			return 1;
-
-	return 0;
-}
-#endif
-
 /* relocate_rangepages
  * 
  * Called at the start of resuming. As well as absolutising pages, we need
diff -ruN software-suspend-core-2.0.0.104/kernel/power/suspend_bootsplash.c software-suspend-core-2.0.0.105/kernel/power/suspend_bootsplash.c
--- software-suspend-core-2.0.0.104/kernel/power/suspend_bootsplash.c	2004-08-30 20:06:29.334404848 +1000
+++ software-suspend-core-2.0.0.105/kernel/power/suspend_bootsplash.c	2004-08-30 20:06:37.115221984 +1000
@@ -12,6 +12,7 @@
 #define __KERNEL_SYSCALLS__
 
 #include <linux/suspend-common.h>
+#include <linux/suspend-version-specific.h>
  
 static int barwidth = 100, barposn = -1, newbarposn = 0;
 static int lastloglevel = -1;
@@ -81,7 +82,7 @@
  */
 extern int console_blanked;
 
-void force_console_redraw(void)
+static void force_console_redraw(void)
 {
 
 	console_blanked = fg_console + 1;
@@ -291,5 +292,5 @@
 MODULE_AUTHOR("Nigel Cunningham");
 MODULE_DESCRIPTION("Suspend2 Bootsplash support");
 #else
-late_initcall(bootsplash_load);
+SUSPEND_INITCALL(bootsplash_load);
 #endif
diff -ruN software-suspend-core-2.0.0.104/kernel/power/suspend_builtin.c software-suspend-core-2.0.0.105/kernel/power/suspend_builtin.c
--- software-suspend-core-2.0.0.104/kernel/power/suspend_builtin.c	2004-08-30 20:06:29.335404696 +1000
+++ software-suspend-core-2.0.0.105/kernel/power/suspend_builtin.c	2004-08-30 20:06:37.116221832 +1000
@@ -19,7 +19,7 @@
  * used by the freezer even if suspend2 is not compiled in are
  * found in process.c
  */
-int suspend_io_time[2][2];
+volatile int suspend_io_time[2][2];
 struct pagedir __nosavedata pagedir_resume;
 struct pagedir pagedir1 = { 1, 0, 0}, pagedir2 = {2, 0, 0};
 
@@ -36,9 +36,9 @@
  * fail if you do.
  */
 #ifdef CONFIG_SOFTWARE_SUSPEND_DEFAULT_RESUME2
-char resume_file[256] = CONFIG_SOFTWARE_SUSPEND_DEFAULT_RESUME2;
+char resume2_file[256] = CONFIG_SOFTWARE_SUSPEND_DEFAULT_RESUME2;
 #else
-char resume_file[256];
+char resume2_file[256];
 #endif
 
 /* --------------- Basic user interface functions --------------- 
@@ -318,7 +318,7 @@
 	if (str == NULL)
 		return 1;
 	
-	strncpy(resume_file, str, 255);
+	strncpy(resume2_file, str, 255);
 	return 0;
 }
 
@@ -386,7 +386,7 @@
 EXPORT_SYMBOL(pagedir2);
 EXPORT_SYMBOL(suspend2_register_core);
 EXPORT_SYMBOL(suspend2_unregister_core);
-EXPORT_SYMBOL(resume_file);
+EXPORT_SYMBOL(resume2_file);
 EXPORT_SYMBOL(suspend_act_used);
 EXPORT_SYMBOL(suspend_lvl_used);
 EXPORT_SYMBOL(suspend_dbg_used);
diff -ruN software-suspend-core-2.0.0.104/kernel/power/suspend.c software-suspend-core-2.0.0.105/kernel/power/suspend.c
--- software-suspend-core-2.0.0.104/kernel/power/suspend.c	2004-08-30 20:06:29.338404240 +1000
+++ software-suspend-core-2.0.0.105/kernel/power/suspend.c	2004-08-30 20:06:37.118221528 +1000
@@ -66,16 +66,6 @@
 #include <linux/console.h>
 #include "suspend_version_specific.c"
 
-#ifdef CONFIG_SOFTWARE_SUSPEND_VARIATION_ANALYSIS
-extern void suspend_variation_analysis_do(void);
-extern int suspend_variation_analysis_init(void);
-extern void suspend_variation_analysis_cleanup(void);
-#else
-#define suspend_variation_analysis_do() do { } while (0)
-#define suspend_variation_analysis_init() (0)
-#define suspend_variation_analysis_cleanup() do { } while(0)
-#endif
-
 /* Variables to be preserved over suspend */
 int pageset1_sizelow = 0, pageset2_sizelow = 0;
 
@@ -85,7 +75,7 @@
 extern unsigned long header_storage_for_plugins(void);
 extern int suspend_initialise_plugin_lists(void);
 extern void suspend_relinquish_console(void);
-extern int suspend_io_time[2][2];
+extern volatile int suspend_io_time[2][2];
 void empty_suspend_memory_pool(void);
 int read_primary_suspend_image(void);
 extern void display_nosave_pages(void);
@@ -118,9 +108,6 @@
 /* proc.c */
 extern int suspend_cleanup_proc(void);
 
-/* process.c */
-extern atomic_t suspend_cpu_counter; 
-
 extern void suspend2_register_core(struct suspend2_core_ops * ops_pointer);
 extern void suspend2_unregister_core(void);
 
@@ -463,8 +450,6 @@
 	read_secondary_pagedir(0);
 	software_suspend_state &= ~SOFTWARE_SUSPEND_PAGESET2_NOT_LOADED;
 	
-	suspend_variation_analysis_do();
-
 	prepare_status(0, 0, "Cleaning up...");
 
 	software_suspend_state &= ~SOFTWARE_SUSPEND_USE_MEMORY_POOL;
@@ -746,9 +731,6 @@
 	
 	PRINTFREEMEM("after allocating bitmaps");
 
-	if (suspend_variation_analysis_init())
-		goto out;
-
 	display_nosave_pages();
 
 	set_chain_names(&pagedir1);
@@ -787,8 +769,6 @@
 
 	software_suspend_state &= ~SOFTWARE_SUSPEND_USE_MEMORY_POOL;
 
-	suspend_variation_analysis_cleanup();
-
 	free_pagedir(&pagedir2);
 	PRINTFREEMEM("after freeing pagedir 1");
 	free_pagedir(&pagedir1);
@@ -809,6 +789,8 @@
 	PRINTFREEMEM("after freeing memory pool");
 	suspend_store_free_mem(SUSPEND_FREE_MEM_POOL, 1);
 
+	put_rangepages_list();
+
 	free_ranges();
 	suspend_store_free_mem(SUSPEND_FREE_RANGE_PAGES, 1);
 	PRINTFREEMEM("after freeing ranges");
@@ -863,7 +845,7 @@
 
 }
 
-int attempt_to_parse_resume_device(int boot_time)
+int attempt_to_parse_resume_device(void)
 {
 	struct list_head *writer;
 	struct suspend_plugin_ops * this_writer;
@@ -881,7 +863,7 @@
 		goto out;
 	}
 	
-	if (!resume_file[0]) {
+	if (!resume2_file[0]) {
 		result = -EINVAL;
 		goto out;
 	}
@@ -898,7 +880,7 @@
 			continue;
 
 		result = this_writer->ops.writer.parse_image_location(
-				resume_file, boot_time, (num_writers == 1));
+				resume2_file, (num_writers == 1));
 
 		switch (result) {
 			case -EINVAL:
@@ -1046,7 +1028,7 @@
 
 	oldfs = get_fs(); set_fs(KERNEL_DS);
 	initialise_suspend_plugins();
-	attempt_to_parse_resume_device(0);
+	attempt_to_parse_resume_device();
 	cleanup_suspend_plugins();
 	set_fs(oldfs);
 	return 0;
@@ -1119,7 +1101,7 @@
 	  .type				= SWSUSP_PROC_DATA_STRING,
 	  .data = {
 		  .string = {
-			  .variable	= resume_file,
+			  .variable	= resume2_file,
 			  .max_length	= 255,
 			  .write_proc	= resume2_write_proc,
 		  }
@@ -1203,18 +1185,15 @@
 	
 	software_suspend_state |= SOFTWARE_SUSPEND_RUNNING;
 
-	if (!resume_file[0])
+	if (!resume2_file[0])
 		printk(KERN_WARNING name_suspend
 			"You need to use a resume2= command line parameter to "
 			"tell Software Suspend 2 where to look for an image.\n");
 
-	/* 
-	 * No need to attempt to parse the resume device here. It will have
-	 * been done when the appropriate plugin was registered.
-	 */
-	
-	if (!(software_suspend_state & SOFTWARE_SUSPEND_RESUME_DEVICE_OK)) {
+	if (!(software_suspend_state & SOFTWARE_SUSPEND_RESUME_DEVICE_OK))
+		attempt_to_parse_resume_device();
 
+	if (!(software_suspend_state & SOFTWARE_SUSPEND_RESUME_DEVICE_OK)) {
 		/* 
 		 * Without a usable storage device we can do nothing - 
 		 * even if noresume is given
@@ -1222,9 +1201,7 @@
 
 		if (!num_writers)
 			printk(KERN_ALERT name_suspend
-				"No writers have been registered. You must "
-				"select a method of storing the image when "
-				"compiling the kernel.\n");
+				"No writers have been registered.\n");
 		else
 			printk(KERN_ALERT name_suspend
 				"Missing or invalid storage location "
@@ -1296,6 +1273,8 @@
 }
 
 extern void suspend_early_boot_message_plugins(void);
+extern void suspend_calculate_checksums(void);
+extern void suspend_check_checksums(void);
 
 struct suspend2_core_ops core_ops = {
 	.do_suspend = do_activate,
@@ -1308,10 +1287,6 @@
 	.get_pool_page = get_suspend_pool_page,
 	.get_grabbed_pages = get_grabbed_pages,
 	.cleanup_finished_io = cleanup_finished_suspend_io,
-#ifdef CONFIG_SOFTWARE_SUSPEND_VARIATION_ANALYSIS
-	.calculate_checksums = suspend_calculate_checksums,
-	.check_checksums = suspend_check_checksums,
-#endif
 	.suspend_message = __suspend_message,
 	.update_status = update_status,
 	.prepare_status = prepare_status,
@@ -1378,5 +1353,5 @@
 MODULE_AUTHOR("Nigel Cunningham");
 MODULE_DESCRIPTION("Suspend2 core");
 #else
-late_initcall(core_load);
+SUSPEND_INITCALL(core_load);
 #endif
diff -ruN software-suspend-core-2.0.0.104/kernel/power/suspend_gzip.c software-suspend-core-2.0.0.105/kernel/power/suspend_gzip.c
--- software-suspend-core-2.0.0.104/kernel/power/suspend_gzip.c	2004-08-30 20:06:29.340403936 +1000
+++ software-suspend-core-2.0.0.105/kernel/power/suspend_gzip.c	2004-08-30 20:06:37.120221224 +1000
@@ -540,5 +540,5 @@
 MODULE_AUTHOR("Nigel Cunningham");
 MODULE_DESCRIPTION("Gzip Compression support for Suspend2");
 #else
-late_initcall(gzip_load);
+SUSPEND_INITCALL(gzip_load);
 #endif
diff -ruN software-suspend-core-2.0.0.104/kernel/power/suspend_lzf.c software-suspend-core-2.0.0.105/kernel/power/suspend_lzf.c
--- software-suspend-core-2.0.0.104/kernel/power/suspend_lzf.c	2004-08-30 20:06:29.341403784 +1000
+++ software-suspend-core-2.0.0.105/kernel/power/suspend_lzf.c	2004-08-30 20:06:37.121221072 +1000
@@ -535,5 +535,5 @@
 MODULE_AUTHOR("Marc Lehmann");
 MODULE_DESCRIPTION("LZF Compression support for Suspend2");
 #else
-late_initcall(lzf_load);
+SUSPEND_INITCALL(lzf_load);
 #endif
diff -ruN software-suspend-core-2.0.0.104/kernel/power/suspend_nfs.c software-suspend-core-2.0.0.105/kernel/power/suspend_nfs.c
--- software-suspend-core-2.0.0.104/kernel/power/suspend_nfs.c	2004-08-30 20:06:29.342403632 +1000
+++ software-suspend-core-2.0.0.105/kernel/power/suspend_nfs.c	1970-01-01 10:00:00.000000000 +1000
@@ -1,270 +0,0 @@
-/*
- * NFSwriter.c
- *
- * Copyright 2004 Nigel Cunningham <ncunningham@users.sourceforge.net>
- *
- * Distributed under GPLv2.
- * 
- * This file encapsulates functions for storing an image on
- * an NFS share.
- *
- */
-
-#include <linux/suspend-common.h>
-
-static int nfswriter_mount_share(void)
-{
-	void *data = nfs_root_data();
-	
-	sys_mkdir("/proc/swsusp/nfsroot", 0700);
-
-	if (data && sys_mount("/dev/root","/proc/swsusp/nfsroot","nfs",root_mountflags,data) == 0)
-		return 1;
-
-	return 0;
-}
-
-static int nfswriter_unmount_share(void)
-{
-	sys_rmdir("/proc/swsusp/nfsroot");
-}
-
-static unsigned long nfswriter_storage_allocated(void)
-{
-	return 0;
-}
-
-static long nfswriter_storage_available(void)
-{
-	return (long) (0);
-}
-
-static int nfswriter_release_storage(void)
-{
-#ifdef CONFIG_SOFTWARE_SUSPEND_KEEP_IMAGE
-	if ((TEST_ACTION_STATE(SUSPEND_KEEP_IMAGE)) && (now_resuming))
-		return 0;
-#endif
-
-	/* Invalidate the image */
-	return 0;
-}
-
-static long nfswriter_allocate_header_space(unsigned long space_requested)
-{
-}
-
-static int nfswriter_allocate_storage(unsigned long space_requested)
-{
-}
-
-static int nfswriter_write_header_init(void)
-{
-	return 0;
-}
-
-static int nfswriter_write_header_chunk(char * buffer, int buffer_size)
-{
-	return 0;
-}
-
-static int nfswriter_write_header_cleanup(void)
-{
-	return 0;
-}
-
-/* ------------------------- HEADER READING ------------------------- */
-
-static int nfswriter_read_header_init(void)
-{
-	return 0;
-}
-
-static int nfswriter_read_header_chunk(char * buffer, int buffer_size)
-{
-	return buffer_size;
-}
-
-static int nfswriter_read_header_cleanup(void)
-{
-	return 0;
-}
-
-static int nfswriter_prepare_save_ranges(void)
-{
-	return 0;
-}
-
-static int nfswriter_post_load_ranges(void)
-{
-	return 0;
-}
-
-static int nfswriter_write_init(int stream_number)
-{
-	return 0;
-}
-
-static int nfswriter_write_chunk(char * buffer)
-{
-	return 0;
-}
-
-static int nfswriter_write_cleanup(void)
-{
-	return 0;
-}
-
-static int nfswriter_read_init(int stream_number)
-{
-	return 0;
-}
-
-static int nfswriter_read_chunk(char * buffer, int sync)
-{
-	return 0;
-}
-
-static int nfswriter_read_cleanup(void)
-{
-	return 0;
-}
-
-static int nfswriter_invalidate_image(void)
-{
-	return 0;
-}
-
-/*
- * workspace_size
- *
- * Description:
- * Returns the number of bytes of RAM needed for this
- * code to do its work. (Used when calculating whether
- * we have enough memory to be able to suspend & resume).
- *
- */
-static unsigned long nfswriter_memory_needed(void)
-{
-	return 0;
-}
-
-/*
- * Storage needed
- *
- * Returns amount of space in the header required
- * for the nfswriter's data.
- *
- */
-static unsigned long nfswriter_storage_needed(void)
-{
-	return 0;
-}
-
-/*
- * Wait on I/O
- *
- */
-
-static int nfswriter_wait_on_io(int flush_all)
-{
-	return 0;
-}
-
-/*
- * Image_exists
- *
- */
-
-static int nfswriter_image_exists(void)
-{
-	return 0;
-}
-
-/*
- * Parse Image Location
- *
- */
-
-static int nfswriter_parse_image_location(char * commandline, int boot_time, 
-		int only_writer)
-{
-	int posn = 0;
-	
-	if (strncmp(commandline, "nfs:", 5)) {
-		if (!only_writer) {
-			printk(name_suspend "Commandline doesn't begin with 'nfs:'"
-					"... nfswriter ignoring.\n");
-			return 0;
-		}
-
-	} else
-		posn+= 5;
-	
-	/*
-	 * posn now points to the start of the parameters we need to parse.
-	 */
-
-	return 1;
-}
-
-struct suspend_plugin_ops nfswriterops = {
-	.type					= WRITER_PLUGIN,
-	.name					= "NFS Writer",
-	.memory_needed				= nfswriter_memory_needed,
-	.storage_needed				= nfswriter_storage_needed,
-	.write_init				= nfswriter_write_init,
-	.write_chunk				= nfswriter_write_chunk,
-	.write_cleanup				= nfswriter_write_cleanup,
-	.read_init				= nfswriter_read_init,
-	.read_chunk				= nfswriter_read_chunk,
-	.read_cleanup				= nfswriter_read_cleanup,
-	.ops = {
-		.writer = {
-			.storage_available 	= nfswriter_storage_available,
-			.storage_allocated	= nfswriter_storage_allocated,
-			.release_storage	= nfswriter_release_storage,
-			.allocate_header_space	= 
-				nfswriter_allocate_header_space,
-			.allocate_storage	= nfswriter_allocate_storage,
-			.image_exists		= nfswriter_image_exists,
-			.write_header_init	= nfswriter_write_header_init,
-			.write_header_chunk	= nfswriter_write_header_chunk,
-			.write_header_cleanup	= 
-				nfswriter_write_header_cleanup,
-			.read_header_init	= nfswriter_read_header_init,
-			.read_header_chunk	= nfswriter_read_header_chunk,
-			.read_header_cleanup	= 
-				nfswriter_read_header_cleanup,
-			.prepare_save_ranges	= 
-				nfswriter_prepare_save_ranges,
-			.post_load_ranges	= nfswriter_post_load_ranges,
-			.invalidate_image	= nfswriter_invalidate_image,
-			.wait_on_io		= nfswriter_wait_on_io,
-			.parse_image_location	= 
-				nfswriter_parse_image_location,
-		}
-	}
-};
-
-/* ---- Registration ---- */
-
-static __init int nfswriter_load(void)
-{
-	printk("Software Suspend NFS Writer v0.1\n");
-	return suspend_register_plugin(&nfswriterops);
-}
-
-static __exit void nfswriter_unload(void)
-{
-	suspend_unregister_plugin(&nfswriterops);
-}
-
-MODULE_LICENSE("GPL");
-MODULE_AUTHOR("Nigel Cunningham");
-MODULE_DESCRIPTION("Suspend2 NFS writer");
-module_init(nfswriter_load);
-module_exit(nfswriter_unload);
-#else
-late_initcall(nfswriter_load);
-#endif
diff -ruN software-suspend-core-2.0.0.104/kernel/power/suspend_nulltransformer.c software-suspend-core-2.0.0.105/kernel/power/suspend_nulltransformer.c
--- software-suspend-core-2.0.0.104/kernel/power/suspend_nulltransformer.c	2004-08-30 20:06:29.343403480 +1000
+++ software-suspend-core-2.0.0.105/kernel/power/suspend_nulltransformer.c	1970-01-01 10:00:00.000000000 +1000
@@ -1,201 +0,0 @@
-/*
- * kernel/power/nulltransformer.c
- *
- * Copyright (C) 2003,2004 Nigel Cunningham <ncunningham@users.sourceforge.net>
- *
- * This file is released under the GPLv2.
- *
- * This file contains a dummy page transformer for testing and use as
- * a template for new page transformers.
- */
-
-#include <linux/suspend-common.h>
-#include <linux/module.h>
-
-struct suspend_plugin_ops nulltransformer_ops;
-struct suspend_plugin_ops * next_driver;
-
-/* write_init()
- * 
- * Description:	Routine called when Suspend wants to start to write a new
- * 		stream of data in the image. If this plugin supports being
- * 		disabled (by registering a proc entry itself), it may do
- * 		nothing here and in read init, and may simply pass data
- * 		through to the next plugin in the read/write_chunk routines.
- * Arguments:	Int. Stream number. Currently 1 or 2 depending upon which
- * 		pageset we are writing.
- * Returns:	Int. Zero on success. Non zero return values are interpreted
- * 		as error conditions and will lead to aborting saving the image.
- */
-static int nulltrans_write_init(int stream_number)
-{
-	next_driver =  get_next_filter(&nulltransformer_ops);
-	
-	if (!next_driver) {
-		printk("Null Pagetransformer: Argh! No one wants my output!");
-		return -ECHILD;
-	}
-
-	return 0;
-}
-
-/* write_chunk()
- *
- * Description:	Routine called when we are writing a chunk of the image.
- * 		The transformer should use the entire input buffer (size
- * 		PAGE_SIZE), not assuming that the data pointed to will be
- * 		available once we return. It should buffer output, before
- * 		sending it to the next filter one page at a time.
- * Arguments:	Char *. Pointer to a buffer of size PAGE_SIZE, containing
- * 		data to be transformed and/or passed on to the next plugin.
- * Returns:	Zero if no error condition exists. Error conditions from
- * 		later plugins should be passed back verbatim.
- */
-
-static int nulltrans_write_chunk(struct page * buffer)
-{
-	return next_driver->ops.filter.write_chunk(buffer);
-}
-
-/* write_cleanup()
- *
- * Description:	Cleanup after writing. This routine should flush buffered
- * 		output (calling write_chunk of the next writer as usual),
- * 		and free any buffers allocated.
- * Returns: 	Zero. Never fails.
- */
-
-static int nulltrans_write_cleanup(void)
-{
-	return 0;
-}
-
-/* read_init
- *
- * Description:	Prepare to read a new stream of data. Like write_init, this
- * 		routine should allocate space needed for buffering and perform
- * 		any other operations needed prior to reading the first chunk of
- * 		data.
- * Arguments:	Int. Portion of the image to be reread.
- * Returns:	Zero if no error. Error value otherwise.
- */
-
-static int nulltrans_read_init(int stream_number)
-{
-	next_driver = get_next_filter(&nulltransformer_ops);
-
-	if (!next_driver) {
-		printk("Null Pagetransformer: Argh! "
-				"No one wants to feed me data!");
-		return -ECHILD;
-	}
-	
-	return 0;
-}
-
-/* read_chunk()
- *
- * Description:	Fill an input buffer with data, reversing any transformation
- * 		made when writing the image.
- * Arguments:	Char *. Pointer to the buffer (size PAGE_SIZE) to be filled.
- * 		Int Sync. Whether the reading of this chunk must be completed
- * 		immediately (1) or can be completed asynchronously (0). Since
- * 		we can't decompress/encrypt data that hasn't yet been read,
- * 		we should call later plugins with 1 and use the argument we
- * 		received if disabled. The advantage to using this argument is
- * 		that if no compression/encryption is enabled, the core code
- * 		will be able to request asynchronous reads from the writer,
- * 		resulting in faster throughput. Note that the writer may
- * 		also implement readahead, helping throughput when we are
- * 		operating synchronously here.
- * Returns:	Int: Zero if no error, error value of this or a later plugin
- * 		otherwise. (Errors from later plugins should be passed back
- * 		verbatim).
- */
-
-static int nulltrans_read_chunk(struct page * buffer, int sync)
-{
-	return next_driver->ops.filter.read_chunk(buffer, sync);
-}
-
-/* read_cleanup()
- *
- * Description:	Clean up after reading part or all of a stream of data.
- * 		(If the user aborts while writing pageset1, we reread
- * 		the part of pageset2 that was overwritten by the atomic
- * 		copy of the kernel). This routine should also free any
- * 		buffers allocated by the read_init routine.
- * Returns:	Zero on success. Should always succeed!
- */
-
-static int nulltrans_read_cleanup(void)
-{
-	return 0;
-}
-
-/* print_debug_stats()
- *
- * Description:	Write debugging information to a buffer, for display
- * 		at the end of a cycle or when the user does cat
- * 		/proc/suspend/debug_info. To prevent buffer overruns,
- * 		suspend_snprintf should be used. It is like vsn_printf,
- * 		but returns the number of bytes actually written (not
- * 		what would have been written if the buffer was big
- * 		enough! - see vsnprint man page).
- * Arguments:	Char *. Pointer to the buffer in which to store info.
- * 		Int. Size of the buffer. Probably less than PAGE_SIZE!
- * Returns:	Number of bytes written.
- */
-extern int suspend_snprintf(char * buffer, int buffer_size, 
-		const char *fmt, ...);
-
-static int nulltrans_print_debug_stats(char * buffer, int size)
-{
-	return 0;
-}
-
-static unsigned long nulltrans_memory_needed(void)
-{
-	return 0;
-}
-
-struct suspend_plugin_ops nulltransformer_ops = {
-	.type			= FILTER_PLUGIN,
-	.name			= "Null Page Transformer",
-	.memory_needed 		= nulltrans_memory_needed,
-	.print_debug_info	= nulltrans_print_debug_stats,
-	.ops = {
-		.filter = {
-		 .write_init		= nulltrans_write_init,
-		 .write_chunk		= nulltrans_write_chunk,
-		 .write_cleanup		= nulltrans_write_cleanup,
-		 .read_init 		= nulltrans_read_init,
-		 .read_chunk		= nulltrans_read_chunk,
-		 .read_cleanup		= nulltrans_read_cleanup,
-		}
-	}
-};
-
-/* ---- Registration ---- */
-
-static __init int nulltrans_load(void)
-{
-	printk("Software Suspend Null Page Transformer.\n");
-	return suspend_register_plugin(&nulltransformer_ops);
-}
-
-#ifdef MODULE
-static __exit void nulltrans_unload(void)
-{
-	printk("Software Suspend Null Page Transformer unloading.\n");
-	return suspend_unregister_plugin(&nulltransformer_ops);
-}
-
-module_init(nulltrans_load);
-module_exit(nulltrans_unload);
-MODULE_LICENSE("GPL");
-MODULE_AUTHOR("Nigel Cunningham");
-MODULE_DESCRIPTION("Page Transformer Template for Suspend2");
-#else
-late_initcall(nulltrans_load);
-#endif
diff -ruN software-suspend-core-2.0.0.104/kernel/power/suspend_nullwriter.c software-suspend-core-2.0.0.105/kernel/power/suspend_nullwriter.c
--- software-suspend-core-2.0.0.104/kernel/power/suspend_nullwriter.c	2004-08-30 20:06:29.343403480 +1000
+++ software-suspend-core-2.0.0.105/kernel/power/suspend_nullwriter.c	1970-01-01 10:00:00.000000000 +1000
@@ -1,289 +0,0 @@
-/*
- * Nullwriter.c
- *
- * Copyright 2004 Nigel Cunningham <ncunningham@users.sourceforge.net>
- *
- * Distributed under GPLv2.
- * 
- * This file encapsulates functions for testing the calls to
- * read/write an image.
- *
- */
-
-#include <linux/suspend-common.h>
-#include <linux/module.h>
-
-#define CAPACITY 200
-static unsigned long available = CAPACITY;
-static unsigned long mainpool_allocated = 0;
-static unsigned long header_allocated = 0;
-
-static unsigned long nullwriter_storage_allocated(void)
-{
-	return mainpool_allocated + header_allocated;
-}
-
-static long nullwriter_storage_available(void)
-{
-	return (long) (mainpool_allocated + header_allocated + available);
-}
-
-static int nullwriter_release_storage(void)
-{
-#ifdef CONFIG_SOFTWARE_SUSPEND_KEEP_IMAGE
-	if ((TEST_ACTION_STATE(SUSPEND_KEEP_IMAGE)) && (now_resuming))
-		return 0;
-#endif
-
-	available += (mainpool_allocated + header_allocated);
-	header_allocated = mainpool_allocated = 0;
-
-	return 0;
-}
-
-static long nullwriter_allocate_header_space(unsigned long space_requested)
-{
-	long extra_wanted = (space_requested - header_allocated);
-
-	if (extra_wanted <= 0)
-		return space_requested;
-	
-	if (extra_wanted < available) {
-		long stolen = MIN((long) mainpool_allocated,
-				(extra_wanted - (long) available));
-		header_allocated += stolen;
-		mainpool_allocated -= stolen;
-	}
-
-	header_allocated += MIN(extra_wanted, (long) available);
-
-	return header_allocated;
-}
-
-static int nullwriter_allocate_storage(unsigned long space_requested)
-{
-	
-	long extra_wanted = (space_requested - mainpool_allocated);
-	long got = MIN(extra_wanted, (long) available);
-
-	if (extra_wanted <= 0)
-		return space_requested;
-
-	mainpool_allocated += got;
-	available -= got;
-
-	return mainpool_allocated;
-}
-
-static int nullwriter_write_header_init(void)
-{
-	return 0;
-}
-
-static int nullwriter_write_header_chunk(char * buffer, int buffer_size)
-{
-	return 0;
-}
-
-static int nullwriter_write_header_cleanup(void)
-{
-	return 0;
-}
-
-/* ------------------------- HEADER READING ------------------------- */
-
-static int nullwriter_read_header_init(void)
-{
-	return 0;
-}
-
-static int nullwriter_read_header_chunk(char * buffer, int buffer_size)
-{
-	return buffer_size;
-}
-
-static int nullwriter_read_header_cleanup(void)
-{
-	return 0;
-}
-
-static int nullwriter_prepare_save_ranges(void)
-{
-	return 0;
-}
-
-static int nullwriter_post_load_ranges(void)
-{
-	return 0;
-}
-
-static int nullwriter_write_init(int stream_number)
-{
-	return 0;
-}
-
-static int nullwriter_write_chunk(struct page * buffer_page)
-{
-	return 0;
-}
-
-static int nullwriter_write_cleanup(void)
-{
-	return 0;
-}
-
-static int nullwriter_read_init(int stream_number)
-{
-	return 0;
-}
-
-static int nullwriter_read_chunk(struct page * buffer_page, int sync)
-{
-	return 0;
-}
-
-static int nullwriter_read_cleanup(void)
-{
-	return 0;
-}
-
-static int nullwriter_invalidate_image(void)
-{
-	return 0;
-}
-
-/*
- * workspace_size
- *
- * Description:
- * Returns the number of bytes of RAM needed for this
- * code to do its work. (Used when calculating whether
- * we have enough memory to be able to suspend & resume).
- *
- */
-static unsigned long nullwriter_memory_needed(void)
-{
-	return 0;
-}
-
-/*
- * Storage needed
- *
- * Returns amount of space in the header required
- * for the nullwriter's data.
- *
- */
-static unsigned long nullwriter_storage_needed(void)
-{
-	return 0;
-}
-
-/*
- * Wait on I/O
- *
- */
-
-static int nullwriter_wait_on_io(int flush_all)
-{
-	return 0;
-}
-
-/*
- * Image_exists
- *
- */
-
-static int nullwriter_image_exists(void)
-{
-	return 0;
-}
-
-/*
- * Parse Image Location
- *
- */
-
-static int nullwriter_parse_image_location(char * commandline, int boot_time, 
-		int only_writer)
-{
-	int posn = 0;
-	
-	if (strncmp(commandline, "null:", 5)) {
-		if (!only_writer) {
-			printk(name_suspend "Commandline doesn't begin with 'null:'"
-					"... nullwriter ignoring.\n");
-			return 0;
-		}
-
-	} else
-		posn+= 5;
-	
-	/*
-	 * posn now points to the start of the parameters we need to parse.
-	 */
-
-	return 1;
-}
-
-struct suspend_plugin_ops nullwriterops = {
-	.type					= WRITER_PLUGIN,
-	.name					= "Null Writer",
-	.memory_needed				= nullwriter_memory_needed,
-	.storage_needed				= nullwriter_storage_needed,
-	.ops = {
-		.writer = {
-			.write_init		= nullwriter_write_init,
-			.write_chunk		= nullwriter_write_chunk,
-			.write_cleanup		= nullwriter_write_cleanup,
-			.read_init		= nullwriter_read_init,
-			.read_chunk		= nullwriter_read_chunk,
-			.read_cleanup		= nullwriter_read_cleanup,
-			.storage_available 	= nullwriter_storage_available,
-			.storage_allocated	= nullwriter_storage_allocated,
-			.release_storage	= nullwriter_release_storage,
-			.allocate_header_space	= 
-				nullwriter_allocate_header_space,
-			.allocate_storage	= nullwriter_allocate_storage,
-			.image_exists		= nullwriter_image_exists,
-			.write_header_init	= nullwriter_write_header_init,
-			.write_header_chunk	= nullwriter_write_header_chunk,
-			.write_header_cleanup	= 
-				nullwriter_write_header_cleanup,
-			.read_header_init	= nullwriter_read_header_init,
-			.read_header_chunk	= nullwriter_read_header_chunk,
-			.read_header_cleanup	= 
-				nullwriter_read_header_cleanup,
-			.prepare_save_ranges	= 
-				nullwriter_prepare_save_ranges,
-			.post_load_ranges	= nullwriter_post_load_ranges,
-			.invalidate_image	= nullwriter_invalidate_image,
-			.wait_on_io		= nullwriter_wait_on_io,
-			.parse_image_location	= 
-				nullwriter_parse_image_location,
-		}
-	}
-};
-
-/* ---- Registration ---- */
-
-static __init int nullwriter_load(void)
-{
-	printk("Software Suspend Null Writer v1.0\n");
-	return suspend_register_plugin(&nullwriterops);
-}
-
-#ifdef MODULE
-static __exit void nullwriter_unload(void)
-{
-	printk("Software Suspend Null Writer unloading.\n");
-	return suspend_unregister_plugin(&nullwriterops);
-}
-
-module_init(nullwriter_load);
-module_exit(nullwriter_unload);
-MODULE_LICENSE("GPL");
-MODULE_AUTHOR("Nigel Cunningham");
-MODULE_DESCRIPTION("Page Writer Template for Suspend2");
-#else
-late_initcall(nullwriter_load);
-#endif
diff -ruN software-suspend-core-2.0.0.104/kernel/power/suspend_swap.c software-suspend-core-2.0.0.105/kernel/power/suspend_swap.c
--- software-suspend-core-2.0.0.104/kernel/power/suspend_swap.c	2004-08-30 20:06:29.347402872 +1000
+++ software-suspend-core-2.0.0.105/kernel/power/suspend_swap.c	2004-08-30 20:06:37.125220464 +1000
@@ -951,8 +951,6 @@
 	header_data.pd1start_block_range =
 		RANGE_ABSOLUTE(header_data.pd1start_block_range);
 	
-	put_rangepages_list();
-
 	return 0;
 }
 
@@ -1551,7 +1549,7 @@
  * necessary.
  */
 
-static int swapwriter_parse_image_location(char * commandline, int boot_time, int only_writer)
+static int swapwriter_parse_image_location(char * commandline, int only_writer)
 {
 	char *thischar, *devstart = NULL, *colon = NULL, *at_symbol = NULL;
 	union p_diskpage diskpage;
@@ -1597,7 +1595,7 @@
 		resume_firstblocksize = 4096;
 	//printk("Setting logical block size of resume device to %d.\n", resume_firstblocksize);
 	
-	if (try_to_parse_resume_device(devstart, boot_time))
+	if (try_to_parse_resume_device(devstart))
 		goto invalid;
 
 	if (colon)
@@ -1780,5 +1778,5 @@
 MODULE_AUTHOR("Nigel Cunningham");
 MODULE_DESCRIPTION("Suspend2 swap writer");
 #else
-late_initcall(swapwriter_load);
+SUSPEND_INITCALL(swapwriter_load);
 #endif
diff -ruN software-suspend-core-2.0.0.104/kernel/power/suspend_text.c software-suspend-core-2.0.0.105/kernel/power/suspend_text.c
--- software-suspend-core-2.0.0.104/kernel/power/suspend_text.c	2004-08-30 20:06:29.350402416 +1000
+++ software-suspend-core-2.0.0.105/kernel/power/suspend_text.c	2004-08-30 20:06:37.126220312 +1000
@@ -31,7 +31,7 @@
 #undef video_num_lines
 #define video_num_lines		(vc_cons[fg_console].d->vc_rows)
 
-static int barwidth = 100, barposn = -1, newbarposn = 0;
+static int barwidth = 0, barposn = -1, newbarposn = 0;
 static int draw_progress_bar = 1;
 static char print_buf[1024];	/* Same as printk - should be safe */
 
@@ -102,6 +102,8 @@
 		return;
 	}
 	
+	barwidth = (video_num_columns - 2 * (video_num_columns / 4) - 2);
+
 	/* Print version */
 	posn[0] = (unsigned char) (0);
 	posn[1] = (unsigned char) (video_num_lines);
@@ -109,14 +111,11 @@
 	cond_console_print(SWSUSP_CORE_VERSION);
 
 	/* Print header */
-	posn[0] = (unsigned char) ((video_num_columns - 29) / 2);
-	posn[1] = (unsigned char) ((video_num_lines / 3) -4);
+	posn[0] = (unsigned char) ((video_num_columns - 31) / 2);
+	posn[1] = (unsigned char) ((video_num_lines / 3) - 3);
 	move_cursor_to(posn);
 
-	if (now_resuming) {
-		cond_console_print(console_resume);
-	} else
-		cond_console_print(console_suspend);
+	cond_console_print("S O F T W A R E   S U S P E N D");
 		
 	/* Print action */
 	posn[1] = (unsigned char) (video_num_lines / 3);
@@ -179,11 +178,6 @@
 	 * we came in here */
 	barwidth = (video_num_columns - 2 * (video_num_columns / 4) - 2);
 
-	if (lastloglevel == -1) {
-		lastloglevel = console_loglevel;
-		return;
-	}
-
 	/* Only reset the display if we're switching between nice display
 	 * and displaying debugging output */
 	
@@ -231,7 +225,10 @@
 	unsigned char posn[2];
 	int message_len = 0;
 
-	if ((!maximum) || (!barwidth))
+	if (!barwidth)
+		barwidth = (video_num_columns - 2 * (video_num_columns / 4) - 2);
+
+	if (!maximum)
 		return maximum;
 
 	if (value < 0)
@@ -372,6 +369,8 @@
 static void text_prepare_console(void)
 {
 	suspend_get_dev_console();
+
+	lastloglevel = console_loglevel;
 	
 	if (console_loglevel < 2)
 		clear_display();
@@ -588,5 +587,5 @@
 MODULE_AUTHOR("Nigel Cunningham");
 MODULE_DESCRIPTION("Suspend2 Text Mode support");
 #else
-late_initcall(text_mode_load);
+SUSPEND_INITCALL(text_mode_load);
 #endif
diff -ruN software-suspend-core-2.0.0.104/kernel/power/suspend_ui.c software-suspend-core-2.0.0.105/kernel/power/suspend_ui.c
--- software-suspend-core-2.0.0.104/kernel/power/suspend_ui.c	2004-08-30 20:06:29.352402112 +1000
+++ software-suspend-core-2.0.0.105/kernel/power/suspend_ui.c	2004-08-30 20:06:37.128220008 +1000
@@ -87,9 +87,6 @@
 		release_console_sem(); \
 	}
 
-/* Forward declaration */
-void force_console_redraw(void);
-
 /* abort_suspend
  *
  * Description: Begin to abort a cycle. If this wasn't at the user's request
@@ -356,18 +353,6 @@
 				prepare_status(1, 0, "Log level changed to %d.",
 					console_loglevel);
 				break;
-#ifdef CONFIG_SOFTWARE_SUSPEND_VARIATION_ANALYSIS
-			case 10:
-				/* Grab image checksums */
-				if (TEST_DEBUG_STATE(SUSPEND_INTEGRITY))
-					suspend_calculate_checksums();
-				break;
-			case 11:
-				/* Calculate differences for pageset 1 only */
-				if (TEST_DEBUG_STATE(SUSPEND_INTEGRITY))
-					suspend_check_checksums();
-				break;
-#endif
 			case 20:
 				prepare_status(1, 0, "General messages %s.",
 					TEST_DEBUG_STATE(SUSPEND_ANY_SECTION) ?
@@ -570,35 +555,21 @@
 	return;
 }
 
-/* force_console_redraw
+/* post_resume_console_redraw(void)
  *
- * Description:	Force a redraw of the console. Necessary after copying the
- * 		original kernel back and when the progress bar is moved
- * 		backwards.
+ * Description:	Redraw the console after copying the original kernel back.
  */
 extern int console_blanked;
 
-void force_console_redraw(void)
+void post_resume_console_redraw(void)
 {
-
 	console_blanked = fg_console + 1;
-	//handle_loglevel_change();
 	acquire_console_sem();
 	unblank_screen();
 	update_screen(fg_console);
 	release_console_sem();
 }
 
-/* post_resume_console_redraw(void)
- *
- * Description:	Redraw the console after copying the original kernel back.
- */
-
-void post_resume_console_redraw(void)
-{
-	force_console_redraw();
-}
-
 #if defined(CONFIG_SOFTWARE_SUSPEND2) && defined(CONFIG_PROC_FS)
 /*
  * User interface specific /proc/suspend entries.
diff -ruN software-suspend-core-2.0.0.104/kernel/power/suspend_variation_analysis.c software-suspend-core-2.0.0.105/kernel/power/suspend_variation_analysis.c
--- software-suspend-core-2.0.0.104/kernel/power/suspend_variation_analysis.c	2004-08-30 20:06:29.353401960 +1000
+++ software-suspend-core-2.0.0.105/kernel/power/suspend_variation_analysis.c	1970-01-01 10:00:00.000000000 +1000
@@ -1,541 +0,0 @@
-/*
- * kernel/power/suspend2_variation_analysis.c
- *
- * Copyright (C) 2004 Nigel Cunningham <ncunningham@users.sourceforge.net>
- *
- * This file is released under the GPLv2.
- *
- */
-
-#define SUSPEND_VA_C
-
-#include <linux/suspend-common.h>
-
-#define CHECKSUMS_PER_PAGE ((PAGE_SIZE - sizeof(void *)) / sizeof(unsigned long))
-#define NEXT_CHECKSUM_PAGE(page) *((unsigned long *) (((char *) (page)) + PAGE_SIZE - sizeof(void *)))
-static int checksum_pages;
-static unsigned long * first_checksum_page, *last_checksum_page;
-static struct reload_data * first_reload_data, * last_reload_data;
-
-static void suspend_print_differences(void);
-
-static unsigned long suspend_page_checksum(struct page * page)
-{
-	unsigned long * virt;
-	int i;
-	unsigned long value = 0;
-
-	virt = (unsigned long *) kmap(page);
-	for (i = 0; i < (PAGE_SIZE / sizeof(unsigned long)); i++)
-		value += *(virt + i);
-	kunmap(page);
-	return value;
-}
-
-extern void get_first_pbe(struct pbe * pbe, struct pagedir * pagedir);
-extern void get_next_pbe(struct pbe * pbe);
-
-void suspend_calculate_checksums(void)
-{
-	struct pbe pbe;
-	int i = 0, page_index = 0, whichpagedir = 1;
-	unsigned long * current_checksum_page = first_checksum_page;
-	
-	if (!first_checksum_page) {
-		prepare_status(1, 0, "Unable to checksum at this point.");
-		return;
-	}
-
-	prepare_status(1, 0, "Calculating checksums... ");
-	
-	get_first_pbe(&pbe, &pagedir1);
-	
-	do {
-		*(current_checksum_page + page_index) =
-			suspend_page_checksum(pbe.origaddress);
-		i++;
-		page_index++;
-		if (page_index == CHECKSUMS_PER_PAGE) {
-			page_index = 0;
-			current_checksum_page = (unsigned long *)
-				NEXT_CHECKSUM_PAGE(current_checksum_page);
-		}
-		if (whichpagedir == 1) {
-			if (pagedir1.pageset_size == i) {
-				if (software_suspend_state & 
-					 SOFTWARE_SUSPEND_PAGESET2_NOT_LOADED)
-					goto out;
-				get_first_pbe(&pbe, &pagedir2);
-				whichpagedir = 2;
-				i = 0;
-			}
-		} else {
-			if (pagedir2.pageset_size == i)
-				goto out;
-		}
-		get_next_pbe(&pbe);
-	} while(1);
-	
-out:
-	prepare_status(1, 0, "Checksums done.");
-}
-
-void suspend_check_checksums(void)
-{
-	struct pbe pbe;
-	int i = 0, page_index = 0, whichpagedir = 1;
-	unsigned long * current_checksum_page = first_checksum_page;
-	unsigned long sum_now;
-	struct reload_data * next_reload_data = first_reload_data;
-
-	if (!first_checksum_page) {
-		prepare_status(1, 0, "Unable to checksum at this point.");
-		return;
-	}
-
-	prepare_status(1, 0, "Checking checksums... ");
-	
-	get_first_pbe(&pbe, &pagedir1);
-	
-	do {
-		if (PageChecksumIgnore(pbe.origaddress))
-			goto skip;
-				
-		sum_now = suspend_page_checksum(pbe.origaddress);
-		if (sum_now != *(current_checksum_page + page_index)) {
-			if (next_reload_data) {
-				char * virt;
-				next_reload_data->pageset = whichpagedir;
-				next_reload_data->pagenumber = i;
-				next_reload_data->page_address = pbe.origaddress;
-				virt = kmap(pbe.origaddress);
-				memcpy(next_reload_data->compared_version, 
-						virt, PAGE_SIZE);
-				kunmap(pbe.origaddress);
-				next_reload_data = next_reload_data->next;
-			}
-		}
-skip:
-		i++;
-		page_index++;
-		if (page_index == CHECKSUMS_PER_PAGE) {
-			page_index = 0;
-			current_checksum_page =	(unsigned long *) 
-				NEXT_CHECKSUM_PAGE(current_checksum_page);
-		}
-		if (whichpagedir == 1) {
-			if (pagedir1.pageset_size == i) {
-				if (software_suspend_state & 
-					 SOFTWARE_SUSPEND_PAGESET2_NOT_LOADED)
-					goto out;
-				get_first_pbe(&pbe, &pagedir2);
-				whichpagedir = 2;
-				i = 0;
-			}
-		} else {
-			if (pagedir2.pageset_size == i)
-				return;
-		}
-		get_next_pbe(&pbe);
-	
-	} while(1);
-	
-out:
-	prepare_status(1, 0, "Differencing done.");
-}
-
-/*
- * free_reload_data.
- *
- * Reload data begins on a page boundary.
- */
-static void suspend_free_reload_data(void)
-{
-	struct reload_data * this_data = first_reload_data;
-	struct reload_data *prev_reload_data = NULL;
-	
-	while (this_data) {
-		if (this_data->compared_version) {
-		  ClearPageNosave(virt_to_page(this_data->compared_version));
-		  free_pages((unsigned long) this_data->compared_version, 0);
-		}
-
-		if (this_data->base_version) {
-			ClearPageNosave(virt_to_page(this_data->base_version));
-			free_pages((unsigned long) this_data->base_version, 0);
-		}
-
-		if (!(((unsigned long) this_data) & PAGE_MASK))
-			prev_reload_data->next = this_data->next;
-		else
-			prev_reload_data = this_data;
-		this_data = this_data->next;
-	}
-
-	this_data = first_reload_data;
-	while (this_data) {
-		prev_reload_data = this_data;
-		this_data = this_data->next;
-		free_pages((unsigned long) prev_reload_data, 0);
-	}
-
-	first_reload_data = last_reload_data = NULL;
-
-}
-
-static void suspend_free_checksum_pages(void)
-{
-	unsigned long * next_checksum_page;
-
-	while(first_checksum_page) {
-		next_checksum_page =
-		  (unsigned long *) NEXT_CHECKSUM_PAGE(first_checksum_page);
-		free_pages((unsigned long) first_checksum_page, 0);
-		first_checksum_page = next_checksum_page;
-	}
-	last_checksum_page = NULL;
-	checksum_pages = 0;
-	suspend_store_free_mem(SUSPEND_FREE_CHECKSUM_PAGES, 1);
-}
-
-#define PRINTABLE(a) (((a) < 32 || (a) > 122) ? '.' : (a))
-extern int PageRangePage(char * seeking);
-
-static void local_print_location(
-		unsigned char * real,
-		unsigned char * original,
-		unsigned char * resumetime)
-{
-	int i;
-
-	for (i = 0; i < 8; i++)
-		if (*(original + i) != *(resumetime + i))
-			break;
-	if (i == 8)
-		return;
-	
-	suspend_message(SUSPEND_INTEGRITY, SUSPEND_HIGH, 1, "%p: ", real);
-
-	for (i = 0; i < 8; i++)
-		suspend_message(SUSPEND_INTEGRITY, SUSPEND_HIGH, 1,
-			"%2x ", *(original + i));
-	suspend_message(SUSPEND_INTEGRITY, SUSPEND_HIGH, 1, "    ");
-	for (i = 0; i < 8; i++)
-		suspend_message(SUSPEND_INTEGRITY, SUSPEND_HIGH, 1,
-			"%c", PRINTABLE(*(original + i)));
-	suspend_message(SUSPEND_INTEGRITY, SUSPEND_HIGH, 1, "    ");
-	
-	for (i = 0; i < 8; i++)
-		suspend_message(SUSPEND_INTEGRITY, SUSPEND_HIGH, 1,
-			"%2x ", *(resumetime + i));
-	suspend_message(SUSPEND_INTEGRITY, SUSPEND_HIGH, 1, "    ");
-	for (i = 0; i < 8; i++)
-		suspend_message(SUSPEND_INTEGRITY, SUSPEND_HIGH, 1,
-			"%c", PRINTABLE(*(resumetime + i)));
-	suspend_message(SUSPEND_INTEGRITY, SUSPEND_HIGH, 1, "\n");
-	if (PageNosave(virt_to_page(real)))
-		suspend_message(SUSPEND_INTEGRITY, SUSPEND_HIGH, 1,
-			"[NoSave]");
-	if (PageRangePage(real))
-		suspend_message(SUSPEND_INTEGRITY, SUSPEND_HIGH, 1,
-			"[RangePage]");
-#ifdef CONFIG_KDB
-	{
-	int did_print = 0;
-	
-	for (i = 0; i < 8; i++) {
-		static const char *last_sym = NULL;
-		if (*(original + i) != *(resumetime + i)) {
-			kdb_symtab_t symtab;
-
-			kdbnearsym((unsigned long) real + i,
-					&symtab);
-
-			if ((!symtab.sym_name) ||
-					(symtab.sym_name == last_sym))
-				continue;
-
-			last_sym = symtab.sym_name;
-
-			suspend_message(SUSPEND_INTEGRITY, SUSPEND_LOW, 1,
-				"%p = %s\n",
-				symtab.sym_start,
-				symtab.sym_name);
-			did_print = 1;
-		}
-	}
-
-	if (did_print)
-		suspend_message(SUSPEND_INTEGRITY, SUSPEND_LOW, 1,
-			"\n");
-	}
-#endif
-}
-
-
-static void suspend_print_differences(void)
-{
-	struct reload_data * this_data = first_reload_data;
-	int i;
-
-	if (get_rangepages_list())
-		return;
-
-	while (this_data) {
-		if (this_data->pageset && 
-		    this_data->pagenumber) {
-			suspend_message(SUSPEND_INTEGRITY, SUSPEND_MEDIUM, 1,
-				"Pagedir %d. Page %d. Address %p."
-				" Base %p. Copy %p.\n",
-				this_data->pageset,
-				this_data->pagenumber,
-				page_address(this_data->page_address),
-				this_data->base_version,
-				this_data->compared_version);
-			for (i= 0; i < (PAGE_SIZE / 8); i++) {
-				local_print_location(
-					page_address(this_data->page_address) + i * 8,
-					this_data->base_version + i * 8,
-					this_data->compared_version + i * 8);
-				check_shift_keys(0, NULL);
-			}
-			check_shift_keys(1, NULL);
-		} else
-			return;
-		this_data = this_data->next;
-	}
-
-	put_rangepages_list();
-}
-
-static int suspend_allocate_reload_data(int pages)
-{
-	struct reload_data * this_data;
-	unsigned long data_start;
-	int i;
-
-	for (i = 1; i <= pages; i++) {
-		data_start = get_grabbed_pages(0);
-
-		if (!data_start)
-			return -ENOMEM;
-
-		SetPageChecksumIgnore(virt_to_page(data_start));
-		this_data = (struct reload_data *) data_start; 
-
-		while (data_start == 
-		  ((((unsigned long) (this_data + 1)) - 1) & PAGE_MASK)) {
-			struct page * page;
-			unsigned long virt;
-
-			virt = get_grabbed_pages(0);
-			if (!virt) {
-				printk("Couldn't get a page in which to store "
-					"a changed page.\n");
-				return -ENOMEM;
-			}
-			page = virt_to_page(virt);
-
-			this_data->compared_version = (char *) virt;
-			SetPageNosave(page);
-			SetPageChecksumIgnore(page);
-			
-			virt = get_grabbed_pages(0);
-			if (!virt) {
-				printk("Couldn't get a page in which to store "
-					"a baseline page.\n");
-				return -ENOMEM;
-			}
-			page = virt_to_page(virt);
-
-			this_data->base_version = (char *) virt;
-			SetPageNosave(page);
-			SetPageChecksumIgnore(page);
-
-			if (last_reload_data)
-				last_reload_data->next = this_data;
-			else
-				first_reload_data = this_data;
-			
-			last_reload_data = this_data;
-
-			this_data++;
-		}
-
-		check_shift_keys(0, NULL);
-	}
-
-	return 0;
-}
-
-void suspend_allocate_checksum_pages(void)
-{
-	int pages_required =
-		(pageset1_size + pageset2_size) / CHECKSUMS_PER_PAGE;
-	unsigned long this_page;
-
-	while (checksum_pages <= pages_required) {
-		this_page = get_grabbed_pages(0);
-		if (!first_checksum_page)
-			first_checksum_page = 
-				(unsigned long *) this_page;
-		else
-			NEXT_CHECKSUM_PAGE(last_checksum_page) = this_page;
-		
-		last_checksum_page = (unsigned long *) this_page;
-		SetPageChecksumIgnore(virt_to_page(this_page));
-		checksum_pages++;
-	}
-	suspend_store_free_mem(SUSPEND_FREE_CHECKSUM_PAGES, 0);
-}
-
-/* suspend_reread_pages()
- *
- * Description:	Reread pages from an image for diagnosing differences.
- * Arguments:	page_list:	A list containing information on pages
- *                              to be reloaded, sorted by pageset and
- *                              page index.
- * Returns:	Zero on success or -1 on failure.
- */
-
-static int suspend_reread_pages(struct reload_data * page_list)
-{
-	int result = 0, whichtoread;
-	long i;
-	struct pbe pbe;
-	struct list_head *filter;
-	struct suspend_plugin_ops * this_filter, * first_filter = get_next_filter(NULL);
-
-	if (!page_list)
-		return 0;
-
-	PRINTFREEMEM("at start of read pageset");
-
-	for (whichtoread = page_list->pageset; whichtoread <= 2; whichtoread++) {
-		struct pagedir * pagedir;
-
-		switch (whichtoread) {
-			case 1:
-				pagedir = &pagedir1;
-				break;
-			case 2:
-				pagedir = &pagedir2;
-				break;
-			default:
-				goto out;
-		}
-
-		suspend_message(SUSPEND_IO, SUSPEND_LOW, 0,
-			"Reread pages from pagedir %d.\n", whichtoread);
-
-		/* Initialise page transformers */
-		list_for_each(filter, &suspend_filters) {
-			this_filter = list_entry(filter, struct suspend_plugin_ops,
-				ops.filter.filter_list);
-			if (this_filter->disabled)
-				continue;
-			if (this_filter->ops.filter.read_init && 
-				this_filter->ops.filter.read_init(whichtoread)) {
-				abort_suspend("Failed to initialise a filter.");
-				return 1;
-			}
-		}
-
-		/* Initialise writer */
-		if (active_writer->ops.filter.read_init(whichtoread)) {
-			abort_suspend("Failed to initialise the writer."); 
-			result = 1;
-			goto reread_free_buffers;
-		}
-
-		get_first_pbe(&pbe, pagedir);
-
-		/* Read the pages */
-		for (i=0; i< pagedir->pageset_size; i++) {
-			/* Read */
-			result = first_filter->ops.filter.read_chunk(
-					virt_to_page(page_list->base_version),
-					SUSPEND_SYNC);
-
-			if (result) {
-				abort_suspend("Failed to read a chunk of the image.");
-				goto reread_free_buffers;
-			}
-
-			/* Interactivity*/
-			check_shift_keys(0, NULL);
-
-			/* Prepare next */
-			get_next_pbe(&pbe);
-
-			/* Got the one we're after? */
-			if (i == page_list->pagenumber)
-				page_list = page_list->next;
-
-			if (page_list->pageset != whichtoread)
-				break;
-		}
-		
-reread_free_buffers:
-
-		/* Cleanup reads from this pageset. */
-		list_for_each(filter, &suspend_filters) {
-			this_filter = list_entry(filter, struct suspend_plugin_ops,
-				ops.filter.filter_list);
-			if (this_filter->disabled)
-				continue;
-			if (this_filter->ops.filter.read_cleanup &&
-				this_filter->ops.filter.read_cleanup()) {
-				abort_suspend("Failed to cleanup a filter.");
-				result = 1;
-			}
-		}
-
-		if (active_writer->ops.filter.read_cleanup()) {
-			abort_suspend("Failed to cleanup the writer.");
-			result = 1;
-		}
-	}
-out:
-	printk("\n");
-
-	return result;
-}
-
-void suspend_variation_analysis_do(void)
-{
-	if (!TEST_DEBUG_STATE(SUSPEND_INTEGRITY))
-		return;
-
-	suspend_reread_pages(first_reload_data);
-	suspend_print_differences();
-}
-
-int suspend_variation_analysis_init(void)
-{
-	/* Allocate even if not used to save having extra tests elsewhere. */
-	if (allocate_local_pageflags(&checksum_map, 0))
-		return 1;
-	PRINTFREEMEM("after allocating checksum map");
-	suspend_store_free_mem(5, 0);
-	
-	if (TEST_DEBUG_STATE(SUSPEND_INTEGRITY)) {
-		suspend_allocate_reload_data(1);
-		PRINTFREEMEM("after allocating reload data");
-		suspend_store_free_mem(SUSPEND_FREE_RELOAD_PAGES, 0);
-	}
-	return 0;
-}
-
-void suspend_variation_analysis_cleanup(void)
-{
-	suspend_free_checksum_pages();
-	PRINTFREEMEM("after freeing checksum pages");
-	suspend_store_free_mem(SUSPEND_FREE_CHECKSUM_PAGES, 1);
-
-	if (TEST_DEBUG_STATE(SUSPEND_INTEGRITY)) {
-		suspend_free_reload_data();
-		PRINTFREEMEM("after freeing reload data");
-		suspend_store_free_mem(SUSPEND_FREE_RELOAD_PAGES, 1);
-	}
-}
