diff -urN linux-2.4.23.org/drivers/ide/ide-probe.c linux-2.4.23/drivers/ide/ide-probe.c
--- linux-2.4.23.org/drivers/ide/ide-probe.c	2003-11-22 18:33:08.000000000 +0100
+++ linux-2.4.23/drivers/ide/ide-probe.c	2003-11-22 18:36:36.000000000 +0100
@@ -623,6 +623,8 @@
 	return drive->present;
 }
 
+EXPORT_SYMBOL(ide_probe_for_drive);
+
 #define hwif_check_region(addr, num) \
 	((hwif->mmio) ? check_mem_region((addr),(num)) : check_region((addr),(num)))
 
@@ -749,6 +751,8 @@
 	return rc;
 }
 
+EXPORT_SYMBOL(ide_wait_hwif_ready);
+
 void ide_probe_reset(ide_hwif_t *hwif)
 {
 	if (hwif->io_ports[IDE_CONTROL_OFFSET] && hwif->reset) {
@@ -766,6 +770,8 @@
 	}
 }
 
+EXPORT_SYMBOL(ide_probe_reset);
+
 void ide_tune_drives(ide_hwif_t *hwif)
 {
 	int unit;
@@ -810,6 +816,8 @@
 	}
 }
 
+EXPORT_SYMBOL(ide_tune_drives);
+
 /*
  * This routine only knows how to look for drive units 0 and 1
  * on an interface, so any setting of MAX_DRIVES > 2 won't work here.
diff -urN linux-2.4.23.org/drivers/ide/pci/cmd640.c linux-2.4.23/drivers/ide/pci/cmd640.c
--- linux-2.4.23.org/drivers/ide/pci/cmd640.c	2003-11-22 18:33:08.000000000 +0100
+++ linux-2.4.23/drivers/ide/pci/cmd640.c	2003-11-22 18:37:13.000000000 +0100
@@ -894,6 +894,8 @@
 	cmd640_vlb = 1;
 }
 
+EXPORT_SYMBOL(init_cmd640_vlb);
+
 module_init(cmd640_init);
 
 MODULE_AUTHOR("See Source");
