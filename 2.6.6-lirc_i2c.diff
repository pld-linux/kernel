--- linux-2.6.8-rc4/drivers/char/lirc/lirc_i2c.c.orig	2004-08-10 10:32:31.006184600 +0200
+++ linux-2.6.8-rc4/drivers/char/lirc/lirc_i2c.c	2004-08-10 10:36:35.809968768 +0200
@@ -118,16 +118,16 @@
 	all = ir->bits | ir->flag;
 
 	/* save IR writable mask bits */
-	mask = i2c_smbus_read_byte(&ir->c) & ~all;
+	mask = i2c_smbus_read_byte(&ir->client) & ~all;
 
 	/* send bit mask */
-	rc = i2c_smbus_write_byte(&ir->c, (0xff & all) | mask);
+	rc = i2c_smbus_write_byte(&ir->client, (0xff & all) | mask);
 
 	/* receive scan code */
-	rc = i2c_smbus_read_byte(&ir->c);
+	rc = i2c_smbus_read_byte(&ir->client);
 
 	if (rc == -1) {
-		dprintk(DEVICE_NAME ": %s read error\n", ir->c.name);
+		dprintk(DEVICE_NAME ": %s read error\n", ir->client.name);
 		return -EIO;
 	}
 
@@ -138,7 +138,7 @@
 	ir->b[0] = rc & all;
 
 	dprintk(DEVICE_NAME ": %s key 0x%02X %s\n",
-		ir->c.name, rc & ir->bits,
+		ir->client.name, rc & ir->bits,
 		(rc & ir->flag) ? "released" : "pressed");
 
 	if (rc & ir->flag) {
@@ -160,7 +160,7 @@
 	unsigned char codes[2];
 
 	/* poll IR chip */
-	if (3 == i2c_master_recv(&ir->c,keybuf,3)) {
+	if (3 == i2c_master_recv(&ir->client,keybuf,3)) {
 		ir->b[0] = keybuf[0];
 		ir->b[1] = keybuf[1];
 		ir->b[2] = keybuf[2];
@@ -192,7 +192,7 @@
 	unsigned char key;
 	
 	/* poll IR chip */
-	if (1 != i2c_master_recv(&ir->c,&key,1)) {
+	if (1 != i2c_master_recv(&ir->client,&key,1)) {
 		dprintk(KERN_DEBUG DEVICE_NAME ": read error\n");
 		return -1;
 	}
@@ -210,7 +210,7 @@
 	unsigned char codes[4];
 	
 	/* poll IR chip */
-	if (1 != i2c_master_recv(&ir->c,&key,1)) {
+	if (1 != i2c_master_recv(&ir->client,&key,1)) {
 		dprintk(KERN_DEBUG DEVICE_NAME ": read error\n");
 		return -ENODATA;
 	}
@@ -235,7 +235,7 @@
 	unsigned char key;
 	
 	/* poll IR chip */
-	if (1 != i2c_master_recv(&ir->c,&key,1)) {
+	if (1 != i2c_master_recv(&ir->client,&key,1)) {
 		dprintk(KERN_DEBUG DEVICE_NAME ": read error\n");
 		return -ENODATA;
 	}
@@ -266,10 +266,10 @@
 	/* this is completely broken code. lirc_unregister_plugin()
 	   must be possible even when the device is open */
 #ifdef KERNEL_2_5
-	i2c_use_client(&ir->c);
+	i2c_use_client(&ir->client);
 #else
-	if (ir->c.adapter->inc_use) 
-		ir->c.adapter->inc_use(ir->c.adapter);
+	if (ir->client.adapter->inc_use) 
+		ir->client.adapter->inc_use(ir->client.adapter);
 #endif
 
 	MOD_INC_USE_COUNT;
@@ -281,10 +281,10 @@
 	struct IR *ir = data;
 
 #ifdef KERNEL_2_5
-	i2c_release_client(&ir->c);
+	i2c_release_client(&ir->client);
 #else
-	if (ir->c.adapter->dec_use) 
-		ir->c.adapter->dec_use(ir->c.adapter);
+	if (ir->client.adapter->dec_use) 
+		ir->client.adapter->dec_use(ir->client.adapter);
 #endif
 	MOD_DEC_USE_COUNT;
 }
@@ -329,14 +329,14 @@
         if (NULL == (ir = kmalloc(sizeof(struct IR),GFP_KERNEL)))
                 return -ENOMEM;
         memcpy(&ir->l,&lirc_template,sizeof(struct lirc_plugin));
-        memcpy(&ir->c,&client_template,sizeof(struct i2c_client));
+        memcpy(&ir->client,&client_template,sizeof(struct i2c_client));
 	
-	ir->c.adapter = adap;
-	ir->c.addr    = addr;
+	ir->client.adapter = adap;
+	ir->client.addr    = addr;
 #ifdef KERNEL_2_5
-	i2c_set_clientdata(&ir->c, ir);
+	i2c_set_clientdata(&ir->client, ir);
 #else
-	ir->c.data    = ir;
+	ir->client.data    = ir;
 #endif
 	ir->l.data    = ir;
 	ir->l.minor   = minor;
@@ -346,29 +346,29 @@
 	switch(addr)
 	{
 	case 0x64:
-		strcpy(ir->c.name,"Pixelview IR");
+		strcpy(ir->client.name,"Pixelview IR");
 		ir->l.code_length = 8;
 		ir->l.add_to_buf=add_to_buf_pixelview;
 		break;
 	case 0x4b:
-		strcpy(ir->c.name,"PV951 IR");
+		strcpy(ir->client.name,"PV951 IR");
 		ir->l.code_length = 32;
 		ir->l.add_to_buf=add_to_buf_pv951;
 		break;
 	case 0x18:
 	case 0x1a:
-		strcpy(ir->c.name,"Hauppauge IR");
+		strcpy(ir->client.name,"Hauppauge IR");
 		ir->l.code_length = 13;
 		ir->l.add_to_buf=add_to_buf_haup;
 		break;
 	case 0x30:
-		strcpy(ir->c.name,"KNC ONE IR");
+		strcpy(ir->client.name,"KNC ONE IR");
 		ir->l.code_length = 8;
 		ir->l.add_to_buf=add_to_buf_knc1;
 		break;
 	case 0x21:
 	case 0x23:
-		strcpy(ir->c.name,"TV-Box IR");
+		strcpy(ir->client.name,"TV-Box IR");
 		ir->l.code_length = 8;
 		ir->l.add_to_buf=add_to_buf_pcf8574;
 		ir->bits = flags & 0xff;
@@ -381,16 +381,16 @@
 		kfree(ir);
 		return -1;
 	}
-	printk("lirc_i2c: chip found @ 0x%02x (%s)\n",addr,ir->c.name);
+	printk("lirc_i2c: chip found @ 0x%02x (%s)\n",addr,ir->client.name);
 	
 	/* register device */
-	i2c_attach_client(&ir->c);
+	i2c_attach_client(&ir->client);
 	ir->l.minor = lirc_register_plugin(&ir->l);
 #ifdef KERNEL_2_5
-	i2c_use_client(&ir->c);
+	i2c_use_client(&ir->client);
 #else
-	if (ir->c.adapter->inc_use) 
-		ir->c.adapter->inc_use(ir->c.adapter);
+	if (ir->client.adapter->inc_use) 
+		ir->client.adapter->inc_use(ir->client.adapter);
 #endif
 	
 	return 0;
@@ -406,13 +406,13 @@
 	
 	/* unregister device */
 #ifdef KERNEL_2_5
-	i2c_release_client(&ir->c);
+	i2c_release_client(&ir->client);
 #else
-	if (ir->c.adapter->dec_use) 
-		ir->c.adapter->dec_use(ir->c.adapter);
+	if (ir->client.adapter->dec_use) 
+		ir->client.adapter->dec_use(ir->client.adapter);
 #endif
 	lirc_unregister_plugin(ir->l.minor);
-	i2c_detach_client(&ir->c);
+	i2c_detach_client(&ir->client);
 
 	/* free memory */
 	kfree(ir);
