diff -puN include/linux/namespace.h~vfsmount_lock-fix include/linux/namespace.h
--- linux-2.6.0-test1/include/linux/namespace.h~vfsmount_lock-fix	2003-07-14 12:24:33.000000000 +0530
+++ linux-2.6.0-test1-maneesh/include/linux/namespace.h	2003-07-14 12:24:33.000000000 +0530
@@ -2,7 +2,7 @@
 #define _NAMESPACE_H_
 #ifdef __KERNEL__
 
-#include <linux/dcache.h>
+#include <linux/mount.h>
 #include <linux/sched.h>
 
 struct namespace {
@@ -19,9 +19,9 @@ static inline void put_namespace(struct 
 {
 	if (atomic_dec_and_test(&namespace->count)) {
 		down_write(&namespace->sem);
-		spin_lock(&dcache_lock);
+		spin_lock(&vfsmount_lock);
 		umount_tree(namespace->root);
-		spin_unlock(&dcache_lock);
+		spin_unlock(&vfsmount_lock);
 		up_write(&namespace->sem);
 		kfree(namespace);
 	}

--- linux-2.5-ppc/arch/ppc/kernel/time.c~	2003-07-14 13:15:17.000000000 +0200
+++ linux-2.5-ppc/arch/ppc/kernel/time.c	2003-07-14 13:18:02.000000000 +0200
@@ -244,7 +244,7 @@
 	time_t wtm_sec, new_sec = tv->tv_sec;
 	long wtm_nsec, new_nsec = tv->tv_nsec;
 	unsigned long flags;
-	int tb_delta, new_nsec, new_sec;
+	int tb_delta;
 
 	if ((unsigned long)tv->tv_nsec >= NSEC_PER_SEC)
 		return -EINVAL;

--- linux-2.6.0/drivers/block/Kconfig.old	2003-07-14 18:41:20.000000000 +1000
+++ linux-2.6.0/drivers/block/Kconfig	2003-07-14 18:41:48.000000000 +1000
@@ -264,6 +264,7 @@
 
 config BLK_DEV_CRYPTOLOOP
 	tristate "Cryptoloop Support"
+	select CRYPTO
 	depends on BLK_DEV_LOOP
 	---help---
 	  Say Y here if you want to be able to use the ciphers that are 
--- 2.5/mm/slab.c	2003-07-10 23:27:00.000000000 +0200
+++ build-2.5/mm/slab.c	2003-07-14 19:36:26.000000000 +0200
@@ -1628,7 +1628,13 @@
 	kfree_debugcheck(objp);
 	page = virt_to_page(objp);
 
-	BUG_ON(GET_PAGE_CACHE(page) != cachep);
+	if (GET_PAGE_CACHE(page) != cachep) {
+		printk(KERN_ERR "mismatch in kmem_cache_free: expected cache %p, got %p\n",
+				GET_PAGE_CACHE(page),cachep);
+		printk(KERN_ERR "%p is %s.\n", cachep, cachep->name);
+		printk(KERN_ERR "%p is %s.\n", GET_PAGE_CACHE(page), GET_PAGE_CACHE(page)->name);
+		WARN_ON(1);
+	}
 	slabp = GET_PAGE_SLAB(page);
 
 	if (cachep->flags & SLAB_STORE_USER) {
