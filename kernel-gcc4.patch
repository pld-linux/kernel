--- a/Makefile	2005-03-30 13:10:50.000000000 +0200
+++ b/Makefile	2005-03-30 13:11:15.000000000 +0200
@@ -200,10 +200,10 @@
 	  else if [ -x /bin/bash ]; then echo /bin/bash; \
 	  else echo sh; fi ; fi)
 
-HOSTCC  	= gcc
-HOSTCXX  	= g++
-HOSTCFLAGS	= -Wall -Wstrict-prototypes -O2 -fomit-frame-pointer
-HOSTCXXFLAGS	= -O2
+HOSTCC  	:= gcc
+HOSTCXX  	:= g++
+HOSTCFLAGS	:= -Wall -Wstrict-prototypes -O2 -fomit-frame-pointer
+HOSTCXXFLAGS	:= -O2
 
 # 	Decide whether to build built-in, modular, or both.
 #	Normally, just do built-in.
@@ -545,6 +545,14 @@
 # disable pointer signedness warnings in gcc 4.0
 CFLAGS += $(call cc-option,-Wno-pointer-sign,)
 
+HOSTCFLAGS += $(shell if $(HOSTCC) $(HOSTCFLAGS) -Wno-pointer-sign -S \
+              -o /dev/null -xc /dev/null > /dev/null 2>&1; then \
+               echo "-Wno-pointer-sign"; fi ;)
+
+HOSTCXXFLAGS += $(shell if $(HOSTCXX) $(HOSTCXXFLAGS) -Wno-pointer-sign -S \
+              -o /dev/null -xc /dev/null > /dev/null 2>&1; then \
+               echo "-Wno-pointer-sign"; fi ;)
+
 # Default kernel image to build when no specific target is given.
 # KBUILD_IMAGE may be overruled on the commandline or
 # set in the environment
--- a/arch/sparc64/kernel/smp.c	2005-05-12 00:41:08.000000000 +0200
+++ b/arch/sparc64/kernel/smp.c	2005-05-16 01:52:11.000000000 +0200
@@ -41,7 +41,7 @@
 extern void calibrate_delay(void);
 
 /* Please don't make this stuff initdata!!!  --DaveM */
-static unsigned char boot_cpu_id;
+unsigned char boot_cpu_id;
 
 cpumask_t cpu_online_map __read_mostly = CPU_MASK_NONE;
 cpumask_t phys_cpu_present_map __read_mostly = CPU_MASK_NONE;
--- a/drivers/input/mouse/psmouse.h	2005-03-13 07:44:40.000000000 +0100
+++ b/drivers/input/mouse/psmouse.h	2005-03-13 14:08:06.000000000 +0100
@@ -1,6 +1,8 @@
 #ifndef _PSMOUSE_H
 #define _PSMOUSE_H
 
+#include <linux/libps2.h>
+
 #define PSMOUSE_CMD_SETSCALE11	0x00e6
 #define PSMOUSE_CMD_SETSCALE21	0x00e7
 #define PSMOUSE_CMD_SETRES	0x10e8
--- a/arch/x86_64/Makefile	2005-11-30 14:54:15.000000000 +0000
+++ b/arch/x86_64/Makefile	2005-11-30 14:54:40.000000000 +0000
@@ -30,6 +30,7 @@
 cflags-$(CONFIG_MK8) += $(call cc-option,-march=k8)
 cflags-$(CONFIG_MPSC) += $(call cc-option,-march=nocona)
 CFLAGS += $(cflags-y)
+CFLAGS += -Wno-unused
 
 CFLAGS += -mno-red-zone
 CFLAGS += -mcmodel=kernel
--- a/linux-2.6.14.7/fs/afs/volume.h	2006-01-31 07:52:07.000000000 +0100
+++ b/linux-2.6.14.7/fs/afs/volume.h	2006-02-13 19:53:13.615256500 +0100
@@ -115,7 +115,7 @@
 	struct cachefs_cookie	*cache;		/* caching cookie */
 #endif
 	afs_volid_t		vid;		/* volume ID */
-	afs_voltype_t __packed	type;		/* type of volume */
+	afs_voltype_t		type;		/* type of volume */
 	char			type_force;	/* force volume type (suppress R/O -> R/W) */
 	unsigned short		nservers;	/* number of server slots filled */
 	unsigned short		rjservers;	/* number of servers discarded due to -ENOMEDIUM */
--- a/linux-2.6.14.7/include/asm-x86_64/mpspec.h	2006-01-31 07:52:07.000000000 +0100
+++ b/linux-2.6.14.7/include/asm-x86_64/mpspec.h	2006-02-13 19:38:19.611384750 +0100
@@ -76,7 +76,7 @@
 {
 	unsigned char mpc_type;
 	unsigned char mpc_busid;
-	unsigned char mpc_bustype[6] __attribute((packed));
+	unsigned char mpc_bustype[6];
 };
 
 /* List of Bus Type string values, Intel MP Spec. */
--- a/linux-2.6.14.7/include/linux/atalk.h	2006-01-31 07:52:07.000000000 +0100
+++ b/linux-2.6.14.7/include/linux/atalk.h	2006-02-13 19:42:06.181544500 +0100
@@ -155,14 +155,14 @@
 #define AARP_REQUEST			1
 #define AARP_REPLY			2
 #define AARP_PROBE			3
-	__u8	hw_src[ETH_ALEN]	__attribute__ ((packed));
-	__u8	pa_src_zero		__attribute__ ((packed));
+	__u8	hw_src[ETH_ALEN];
+	__u8	pa_src_zero;
 	__be16	pa_src_net		__attribute__ ((packed));
-	__u8	pa_src_node		__attribute__ ((packed));
-	__u8	hw_dst[ETH_ALEN]	__attribute__ ((packed));
-	__u8	pa_dst_zero		__attribute__ ((packed));
+	__u8	pa_src_node;
+	__u8	hw_dst[ETH_ALEN];
+	__u8	pa_dst_zero;
 	__be16	pa_dst_net		__attribute__ ((packed));
-	__u8	pa_dst_node		__attribute__ ((packed));	
+	__u8	pa_dst_node;	
 };
 
 static __inline__ struct elapaarp *aarp_hdr(struct sk_buff *skb)
--- a/linux-2.6.14.7/include/linux/cycx_x25.h	2006-01-31 07:52:07.000000000 +0100
+++ b/linux-2.6.14.7/include/linux/cycx_x25.h	2006-02-13 20:14:52.480430500 +0100
@@ -92,22 +92,22 @@
  *	@flags - see dosx25.doc, in portuguese, for details
  */
 struct cycx_x25_config {
-	u8  link	PACKED;
-	u8  speed	PACKED;
-	u8  clock	PACKED;
-	u8  n2		PACKED;
-	u8  n2win	PACKED;
-	u8  n3win	PACKED;
-	u8  nvc		PACKED;
-	u8  pktlen	PACKED;
-	u8  locaddr	PACKED;
-	u8  remaddr	PACKED;
+	u8  link;
+	u8  speed;
+	u8  clock;
+	u8  n2;
+	u8  n2win;
+	u8  n3win;
+	u8  nvc;
+	u8  pktlen;
+	u8  locaddr;
+	u8  remaddr;
 	u16 t1		PACKED;
 	u16 t2		PACKED;
-	u8  t21		PACKED;
-	u8  npvc	PACKED;
-	u8  t23		PACKED;
-	u8  flags	PACKED;
+	u8  t21;
+	u8  npvc;
+	u8  t23;
+	u8  flags;
 };
 
 struct cycx_x25_stats {
--- a/linux-2.6.14.7/include/linux/if_frad.h	2006-01-31 07:52:07.000000000 +0100
+++ b/linux-2.6.14.7/include/linux/if_frad.h	2006-02-13 19:47:56.779455500 +0100
@@ -131,13 +131,13 @@
 /* these are the fields of an RFC 1490 header */
 struct frhdr
 {
-   unsigned char  control	__attribute__((packed));
+   unsigned char  control;
 
    /* for IP packets, this can be the NLPID */
-   unsigned char  pad		__attribute__((packed)); 
+   unsigned char  pad; 
 
-   unsigned char  NLPID		__attribute__((packed));
-   unsigned char  OUI[3]	__attribute__((packed));
+   unsigned char  NLPID;
+   unsigned char  OUI[3];
    unsigned short PID		__attribute__((packed));
 
 #define IP_NLPID pad 
--- a/linux-2.6.14.7/include/linux/ncp.h	2006-01-31 07:52:07.000000000 +0100
+++ b/linux-2.6.14.7/include/linux/ncp.h	2006-02-13 19:41:27.915153000 +0100
@@ -21,12 +21,12 @@
 
 struct ncp_request_header {
 	__u16 type __attribute__((packed));
-	__u8 sequence __attribute__((packed));
-	__u8 conn_low __attribute__((packed));
-	__u8 task __attribute__((packed));
-	__u8 conn_high __attribute__((packed));
-	__u8 function __attribute__((packed));
-	__u8 data[0] __attribute__((packed));
+	__u8 sequence;
+	__u8 conn_low;
+	__u8 task;
+	__u8 conn_high;
+	__u8 function;
+	__u8 data[0];
 };
 
 #define NCP_REPLY                (0x3333)
@@ -35,13 +35,13 @@
 
 struct ncp_reply_header {
 	__u16 type __attribute__((packed));
-	__u8 sequence __attribute__((packed));
-	__u8 conn_low __attribute__((packed));
-	__u8 task __attribute__((packed));
-	__u8 conn_high __attribute__((packed));
-	__u8 completion_code __attribute__((packed));
-	__u8 connection_state __attribute__((packed));
-	__u8 data[0] __attribute__((packed));
+	__u8 sequence;
+	__u8 conn_low;
+	__u8 task;
+	__u8 conn_high;
+	__u8 completion_code;
+	__u8 connection_state;
+	__u8 data[0];
 };
 
 #define NCP_VOLNAME_LEN (16)
@@ -152,8 +152,8 @@
 	__u32 EAKeyCount __attribute__((packed));
 	__u32 EAKeySize __attribute__((packed));
 	__u32 NSCreator __attribute__((packed));
-	__u8 nameLen __attribute__((packed));
-	__u8 entryName[256] __attribute__((packed));
+	__u8 nameLen;
+	__u8 entryName[256];
 	/* libncp may depend on there being nothing after entryName */
 #ifdef __KERNEL__
 	struct nw_nfs_info nfs;
@@ -193,7 +193,7 @@
 };
 
 struct nw_search_sequence {
-	__u8 volNumber __attribute__((packed));
+	__u8 volNumber;
 	__u32 dirBase __attribute__((packed));
 	__u32 sequence __attribute__((packed));
 };
--- a/linux-2.6.14.7/include/linux/wavefront.h	2006-01-31 07:52:07.000000000 +0100
+++ b/linux-2.6.14.7/include/linux/wavefront.h	2006-02-13 20:26:02.198285250 +0100
@@ -443,13 +443,13 @@
 
     INT16  FrequencyBias __attribute__ ((packed));
 
-    UCHAR8 SampleResolution:2  __attribute__ ((packed));
-    UCHAR8 Unused1:1  __attribute__ ((packed));
-    UCHAR8 Loop:1 __attribute__ ((packed));
-    UCHAR8 Bidirectional:1  __attribute__ ((packed));
-    UCHAR8 Unused2:1 __attribute__ ((packed));
-    UCHAR8 Reverse:1 __attribute__ ((packed));
-    UCHAR8 Unused3:1 __attribute__ ((packed)); 
+    UCHAR8 SampleResolution:2;
+    UCHAR8 Unused1:1;
+    UCHAR8 Loop:1;
+    UCHAR8 Bidirectional:1;
+    UCHAR8 Unused2:1;
+    UCHAR8 Reverse:1;
+    UCHAR8 Unused3:1; 
     
     /* This structure is meant to be padded only to 16 bits on their
        original. Of course, whoever wrote their documentation didn't
@@ -460,7 +460,7 @@
        standard 16->32 bit issues.
     */
 
-    UCHAR8 sixteen_bit_padding __attribute__ ((packed));
+    UCHAR8 sixteen_bit_padding;
 } wavefront_alias;
 
 typedef struct wf_drum {
--- a/linux-2.6.14.7/include/net/dn_dev.h	2006-01-31 07:52:07.000000000 +0100
+++ b/linux-2.6.14.7/include/net/dn_dev.h	2006-02-13 20:31:45.019710250 +0100
@@ -99,56 +99,56 @@
 
 struct dn_short_packet
 {
-	unsigned char   msgflg          __attribute__((packed));
+	unsigned char   msgflg;
         unsigned short  dstnode         __attribute__((packed));
         unsigned short  srcnode         __attribute__((packed));
-        unsigned char   forward         __attribute__((packed));
+        unsigned char   forward;
 };
 
 struct dn_long_packet
 {
-	unsigned char   msgflg          __attribute__((packed));
-        unsigned char   d_area          __attribute__((packed));
-        unsigned char   d_subarea       __attribute__((packed));
-        unsigned char   d_id[6]         __attribute__((packed));
-        unsigned char   s_area          __attribute__((packed));
-        unsigned char   s_subarea       __attribute__((packed));
-        unsigned char   s_id[6]         __attribute__((packed));
-        unsigned char   nl2             __attribute__((packed));
-        unsigned char   visit_ct        __attribute__((packed));
-        unsigned char   s_class         __attribute__((packed));
-        unsigned char   pt              __attribute__((packed));
+	unsigned char   msgflg;
+        unsigned char   d_area;
+        unsigned char   d_subarea;
+        unsigned char   d_id[6];
+        unsigned char   s_area;
+        unsigned char   s_subarea;
+        unsigned char   s_id[6];
+        unsigned char   nl2;
+        unsigned char   visit_ct;
+        unsigned char   s_class;
+        unsigned char   pt;
 };
 
 /*------------------------- DRP - Routing messages ---------------------*/
 
 struct endnode_hello_message
 {
-	unsigned char   msgflg          __attribute__((packed));
-        unsigned char   tiver[3]        __attribute__((packed));
-        unsigned char   id[6]           __attribute__((packed));
-        unsigned char   iinfo           __attribute__((packed));
+	unsigned char   msgflg;
+        unsigned char   tiver[3];
+        unsigned char   id[6];
+        unsigned char   iinfo;
         unsigned short  blksize         __attribute__((packed));
-        unsigned char   area            __attribute__((packed));
-        unsigned char   seed[8]         __attribute__((packed));
-        unsigned char   neighbor[6]     __attribute__((packed));
+        unsigned char   area;
+        unsigned char   seed[8];
+        unsigned char   neighbor[6];
         unsigned short  timer           __attribute__((packed));
-        unsigned char   mpd             __attribute__((packed));
-        unsigned char   datalen         __attribute__((packed));
-        unsigned char   data[2]         __attribute__((packed));
+        unsigned char   mpd;
+        unsigned char   datalen;
+        unsigned char   data[2];
 };
 
 struct rtnode_hello_message
 {
-	unsigned char   msgflg          __attribute__((packed));
-        unsigned char   tiver[3]        __attribute__((packed));
-        unsigned char   id[6]           __attribute__((packed));
-        unsigned char   iinfo           __attribute__((packed));
+	unsigned char   msgflg;
+        unsigned char   tiver[3];
+        unsigned char   id[6];
+        unsigned char   iinfo;
         unsigned short  blksize         __attribute__((packed));
-        unsigned char   priority        __attribute__((packed));
-        unsigned char   area            __attribute__((packed));
+        unsigned char   priority;
+        unsigned char   area;
         unsigned short  timer           __attribute__((packed));
-        unsigned char   mpd             __attribute__((packed));
+        unsigned char   mpd;
 };
 
 
--- a/linux-2.6.14.7/include/net/dn_nsp.h	2006-01-31 07:52:07.000000000 +0100
+++ b/linux-2.6.14.7/include/net/dn_nsp.h	2006-02-13 20:30:17.874264000 +0100
@@ -72,7 +72,7 @@
 
 struct nsp_data_seg_msg
 {
-	unsigned char   msgflg          __attribute__((packed));
+	unsigned char   msgflg;
 	unsigned short  dstaddr         __attribute__((packed));
 	unsigned short  srcaddr         __attribute__((packed));
 };
@@ -94,7 +94,7 @@
 /* Acknowledgment Message (data/other data)                             */
 struct nsp_data_ack_msg
 {
-	unsigned char   msgflg          __attribute__((packed));
+	unsigned char   msgflg;
 	unsigned short  dstaddr         __attribute__((packed));
 	unsigned short  srcaddr         __attribute__((packed));
 	unsigned short  acknum          __attribute__((packed));
@@ -103,7 +103,7 @@
 /* Connect Acknowledgment Message */
 struct  nsp_conn_ack_msg
 {
-	unsigned char   msgflg          __attribute__((packed));
+	unsigned char   msgflg;
 	unsigned short  dstaddr         __attribute__((packed));
 };
 
@@ -111,24 +111,24 @@
 /* Connect Initiate/Retransmit Initiate/Connect Confirm */
 struct  nsp_conn_init_msg
 {
-	unsigned char   msgflg          __attribute__((packed));
+	unsigned char   msgflg;
 #define NSP_CI      0x18            /* Connect Initiate     */
 #define NSP_RCI     0x68            /* Retrans. Conn Init   */
 	unsigned short  dstaddr         __attribute__((packed));
         unsigned short  srcaddr         __attribute__((packed));
-        unsigned char   services        __attribute__((packed));
+        unsigned char   services;
 #define NSP_FC_NONE   0x00            /* Flow Control None    */
 #define NSP_FC_SRC    0x04            /* Seg Req. Count       */
 #define NSP_FC_SCMC   0x08            /* Sess. Control Mess   */
 #define NSP_FC_MASK   0x0c            /* FC type mask         */
-	unsigned char   info            __attribute__((packed));
+	unsigned char   info;
         unsigned short  segsize         __attribute__((packed));
 };
 
 /* Disconnect Initiate/Disconnect Confirm */
 struct  nsp_disconn_init_msg
 {
-	unsigned char   msgflg          __attribute__((packed));
+	unsigned char   msgflg;
         unsigned short  dstaddr         __attribute__((packed));
         unsigned short  srcaddr         __attribute__((packed));
         unsigned short  reason          __attribute__((packed));
@@ -138,11 +138,11 @@
 
 struct  srcobj_fmt
 {
-	char            format          __attribute__((packed));
-        unsigned char   task            __attribute__((packed));
+	char            format;
+        unsigned char   task;
         unsigned short  grpcode         __attribute__((packed));
         unsigned short  usrcode         __attribute__((packed));
-        char            dlen            __attribute__((packed));
+        char            dlen;
 };
 
 /*
