
 Makefile                                     |    4 +--
 drivers/net/wan/pc300_drv.c                  |   10 ++++----
 include/asm-i386/processor.h                 |    6 +----
 include/linux/fb.h                           |    5 ++--
 linux-2.6.10/drivers/media/dvb/bt8xx/bt878.h |    6 ++---
 linux-2.6.10/drivers/media/video/bttvp.h     |   21 ++++++++---------
 linux-2.6.10/include/linux/i2c.h             |   32 +++++++++++++--------------
 net/ipv4/netfilter/ipt_XOR.c                 |    6 +----
 8 files changed, 43 insertions(+), 47 deletions(-)

--- a/Makefile	2005-02-13 16:02:05.000000000 +0100
+++ b/Makefile	2005-02-14 20:33:42.643412656 +0100
@@ -203,7 +203,7 @@
 
 HOSTCC  	= gcc
 HOSTCXX  	= g++
-HOSTCFLAGS	= -Wall -Wstrict-prototypes -O2 -fomit-frame-pointer
+HOSTCFLAGS	= -Wall -Wstrict-prototypes -Wno-pointer-sign -O2 -fomit-frame-pointer
 HOSTCXXFLAGS	= -O2
 
 # 	Decide whether to build built-in, modular, or both.
@@ -348,7 +348,7 @@
 
 CPPFLAGS        := -D__KERNEL__ $(LINUXINCLUDE)
 
-CFLAGS 		:= -Wall -Wstrict-prototypes -Wno-trigraphs \
+CFLAGS 		:= -Wall -Wstrict-prototypes -Wno-trigraphs -Wno-pointer-sign \
 	  	   -fno-strict-aliasing -fno-common
 AFLAGS		:= -D__ASSEMBLY__
 
--- a/net/ipv4/netfilter/ipt_XOR.c	2004-12-10 10:54:24.000000000 +0100
+++ b/net/ipv4/netfilter/ipt_XOR.c	2004-12-10 21:53:12.578046056 +0100
@@ -40,8 +40,7 @@
 		tcph = (struct tcphdr *) ((*pskb)->data + iph->ihl*4);
 		for (i=0, j=0; i<(ntohs(iph->tot_len) - iph->ihl*4 - tcph->doff*4); ) {
 			for (k=0; k<=info->block_size; k++) {
-				(char) (*pskb)->data[ iph->ihl*4 + tcph->doff*4 + i ] ^= 
-						info->key[j];
+				(*pskb)->data[ iph->ihl*4 + tcph->doff*4 + i ] ^= info->key[j];
 				i++;
 			}
 			j++;
@@ -52,8 +51,7 @@
 		udph = (struct udphdr *) ((*pskb)->data + iph->ihl*4);
 		for (i=0, j=0; i<(ntohs(udph->len)-8); ) {
 			for (k=0; k<=info->block_size; k++) {
-				(char) (*pskb)->data[ iph->ihl*4 + sizeof(struct udphdr) + i ] ^= 
-						info->key[j];
+				(*pskb)->data[ iph->ihl*4 + sizeof(struct udphdr) + i ] ^= info->key[j];
 				i++;
 			}
 			j++;
--- a/drivers/net/wan/pc300_drv.c	2004-12-24 22:35:29.000000000 +0100
+++ b/drivers/net/wan/pc300_drv.c	2005-02-08 13:49:57.939341600 +0100
@@ -1776,7 +1776,7 @@
 	pc300_t *card = (pc300_t *) chan->card;
 	struct net_device_stats *stats = hdlc_stats(dev);
 	int ch = chan->channel;
-	uclong flags;
+	unsigned long flags;
 	ucchar ilar;
 
 	stats->tx_errors++;
@@ -1804,7 +1804,7 @@
 	pc300_t *card = (pc300_t *) chan->card;
 	struct net_device_stats *stats = hdlc_stats(dev);
 	int ch = chan->channel;
-	uclong flags;
+	unsigned long flags;
 #ifdef PC300_DEBUG_TX
 	int i;
 #endif
@@ -2407,7 +2407,7 @@
 {
 	ucchar ilar;
 	void __iomem *scabase = card->hw.scabase;
-	uclong flags;
+	unsigned long flags;
 
 	tx_dma_buf_check(card, ch);
 	rx_dma_buf_check(card, ch);
@@ -2499,7 +2499,7 @@
 {
 	pc300ch_t *chan = &card->chan[ch];
 	falc_t *pfalc = (falc_t *) & chan->falc;
-	uclong flags;
+	unsigned long flags;
 
 	CPC_LOCK(card, flags);
 	printk("CH%d:   %s %s  %d channels\n",
@@ -3179,7 +3179,7 @@
 	pc300dev_t *d = (pc300dev_t *) dev->priv;
 	pc300ch_t *chan = (pc300ch_t *) d->chan;
 	pc300_t *card = (pc300_t *) chan->card;
-	uclong flags;
+	unsigned long flags;
 
 #ifdef	PC300_DEBUG_OTHER
 	printk("pc300: cpc_close");
--- a/include/asm-i386/processor.h	2005-02-14 20:43:24.000000000 +0100
+++ b/include/asm-i386/processor.h	2005-02-14 21:47:57.564395944 +0100
@@ -85,10 +85,6 @@
 extern struct cpuinfo_x86 boot_cpu_data;
 extern struct cpuinfo_x86 new_cpu_data;
 extern struct tss_struct doublefault_tss;
-#if 0
-DECLARE_PER_CPU(struct tss_struct, init_tss);
-#endif
-extern struct tss_struct init_tss[NR_CPUS];
 
 #ifdef CONFIG_SMP
 extern struct cpuinfo_x86 cpu_data[];
@@ -427,6 +423,8 @@
 	unsigned long stack[64];
 } __attribute__((packed));
 
+extern struct tss_struct init_tss[NR_CPUS];
+
 #define ARCH_MIN_TASKALIGN	16
 
 struct thread_struct {
--- a/include/linux/fb.h	2005-02-14 20:43:19.000000000 +0100
+++ b/include/linux/fb.h	2005-02-14 22:44:26.751502424 +0100
@@ -878,8 +878,6 @@
 extern void fb_destroy_modedb(struct fb_videomode *modedb);
 
 /* drivers/video/modedb.c */
-#define VESA_MODEDB_SIZE 34
-extern const struct fb_videomode vesa_modes[];
 extern void fb_var_to_videomode(struct fb_videomode *mode,
 				struct fb_var_screeninfo *var);
 extern void fb_videomode_to_var(struct fb_var_screeninfo *var,
@@ -929,6 +927,9 @@
 	struct fb_videomode mode;
 };
 
+#define VESA_MODEDB_SIZE 34
+extern const struct fb_videomode vesa_modes[];
+
 extern int fb_find_mode(struct fb_var_screeninfo *var,
 			struct fb_info *info, const char *mode_option,
 			const struct fb_videomode *db,
--- linux-2.6.10/include/linux/i2c.h.orig	2004-12-24 22:34:01.000000000 +0100
+++ linux-2.6.10/include/linux/i2c.h	2005-02-14 23:35:45.455135464 +0100
@@ -36,7 +36,22 @@
 
 /* --- General options ------------------------------------------------	*/
 
-struct i2c_msg;
+/*
+ * I2C Message - used for pure i2c transaction, also from /dev interface
+ */
+struct i2c_msg {
+	__u16 addr;	/* slave address			*/
+ 	__u16 flags;		
+#define I2C_M_TEN	0x10	/* we have a ten bit chip address	*/
+#define I2C_M_RD	0x01
+#define I2C_M_NOSTART	0x4000
+#define I2C_M_REV_DIR_ADDR	0x2000
+#define I2C_M_IGNORE_NAK	0x1000
+#define I2C_M_NO_RD_ACK		0x0800
+ 	__u16 len;		/* msg length				*/
+ 	__u8 *buf;		/* pointer to msg data			*/
+};
+
 struct i2c_algorithm;
 struct i2c_adapter;
 struct i2c_client;
@@ -379,21 +394,6 @@
 /* Return 1 if adapter supports everything we need, 0 if not. */
 extern int i2c_check_functionality (struct i2c_adapter *adap, u32 func);
 
-/*
- * I2C Message - used for pure i2c transaction, also from /dev interface
- */
-struct i2c_msg {
-	__u16 addr;	/* slave address			*/
- 	__u16 flags;		
-#define I2C_M_TEN	0x10	/* we have a ten bit chip address	*/
-#define I2C_M_RD	0x01
-#define I2C_M_NOSTART	0x4000
-#define I2C_M_REV_DIR_ADDR	0x2000
-#define I2C_M_IGNORE_NAK	0x1000
-#define I2C_M_NO_RD_ACK		0x0800
- 	__u16 len;		/* msg length				*/
- 	__u8 *buf;		/* pointer to msg data			*/
-};
 
 /* To determine what functionality is present */
 
--- linux-2.6.10/drivers/media/dvb/bt8xx/bt878.h.orig	2004-12-24 22:35:50.000000000 +0100
+++ linux-2.6.10/drivers/media/dvb/bt8xx/bt878.h	2005-02-14 23:46:30.575062328 +0100
@@ -88,9 +88,6 @@
 
 #define BT878_RISC_SYNC_MASK	(1 << 15)
 
-extern int bt878_num;
-extern struct bt878 bt878[BT878_MAX];
-
 struct bt878 {
 	struct semaphore  gpio_lock;
 	unsigned int nr;
@@ -124,6 +121,9 @@
 	int shutdown;	
 };
 
+extern int bt878_num;
+extern struct bt878 bt878[BT878_MAX];
+
 void bt878_start(struct bt878 *bt, u32 controlreg, u32 op_sync_orin,
 		u32 irq_err_ignore);
 void bt878_stop(struct bt878 *bt);	     
--- linux-2.6.10/drivers/media/video/bttvp.h.orig	2004-12-24 22:35:50.000000000 +0100
+++ linux-2.6.10/drivers/media/video/bttvp.h	2005-02-14 23:52:36.512431392 +0100
@@ -250,17 +250,6 @@
 #define dprintk  if (bttv_debug >= 1) printk
 #define d2printk if (bttv_debug >= 2) printk
 
-/* our devices */
-#define BTTV_MAX 16
-extern unsigned int bttv_num;
-extern struct bttv bttvs[BTTV_MAX];
-
-#define BTTV_MAX_FBUF   0x208000
-#define VBIBUF_SIZE     (2048*VBI_MAXLINES*2)
-#define BTTV_TIMEOUT    (HZ/2) /* 0.5 seconds */
-#define BTTV_FREE_IDLE  (HZ)   /* one second */
-
-
 struct bttv_pll_info {
 	unsigned int pll_ifreq;    /* PLL input frequency        */
 	unsigned int pll_ofreq;    /* PLL output frequency       */
@@ -401,6 +390,16 @@
 	struct bttv_fh init;
 };
 
+/* our devices */
+#define BTTV_MAX 16
+extern unsigned int bttv_num;
+extern struct bttv bttvs[BTTV_MAX];
+
+#define BTTV_MAX_FBUF   0x208000
+#define VBIBUF_SIZE     (2048*VBI_MAXLINES*2)
+#define BTTV_TIMEOUT    (HZ/2) /* 0.5 seconds */
+#define BTTV_FREE_IDLE  (HZ)   /* one second */
+
 /* private ioctls */
 #define BTTV_VERSION            _IOR('v' , BASE_VIDIOCPRIVATE+6, int)
 #define BTTV_VBISIZE            _IOR('v' , BASE_VIDIOCPRIVATE+8, int)
